[{"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx":"1","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts":"2","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx":"3","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts":"4","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts":"5","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx":"6","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts":"7","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx":"8","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx":"9","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx":"10","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx":"11","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx":"12","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerListItem.tsx":"13","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx":"14","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx":"15","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx":"16","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx":"17","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx":"18","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx":"19","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Client.ts":"20","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/util.ts":"21"},{"size":881,"mtime":1611982248182,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1611822231897,"results":"24","hashOfConfig":"23"},{"size":546,"mtime":1611980605356,"results":"25","hashOfConfig":"23"},{"size":1330,"mtime":1612075577525,"results":"26","hashOfConfig":"23"},{"size":343,"mtime":1611979823354,"results":"27","hashOfConfig":"23"},{"size":1669,"mtime":1616388777275,"results":"28","hashOfConfig":"23"},{"size":387,"mtime":1617955346306,"results":"29","hashOfConfig":"23"},{"size":244,"mtime":1611822231897,"results":"30","hashOfConfig":"23"},{"size":146,"mtime":1616305539097,"results":"31","hashOfConfig":"23"},{"size":2546,"mtime":1617954967358,"results":"32","hashOfConfig":"23"},{"size":416,"mtime":1611848875100,"results":"33","hashOfConfig":"23"},{"size":1873,"mtime":1617959530392,"results":"34","hashOfConfig":"23"},{"size":2086,"mtime":1616388835818,"results":"35","hashOfConfig":"23"},{"size":3557,"mtime":1616305105298,"results":"36","hashOfConfig":"23"},{"size":195,"mtime":1616387934143,"results":"37","hashOfConfig":"23"},{"size":1290,"mtime":1618030456226,"results":"38","hashOfConfig":"23"},{"size":178,"mtime":1616388634918,"results":"39","hashOfConfig":"23"},{"size":2153,"mtime":1617960254509,"results":"40","hashOfConfig":"23"},{"size":1828,"mtime":1616617675629,"results":"41","hashOfConfig":"23"},{"size":163,"mtime":1617956277768,"results":"42","hashOfConfig":"23"},{"size":1376,"mtime":1617960085449,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"12y6c6c",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"46"},"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx",[],[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts",["104"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx",["105"],"import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport { History } from 'history';\nimport { Store } from './store/store';\nimport ApplicationRouter from './containers/Router';\n\ninterface RootProps {\n  store: Store;\n  history: History;\n}\n\nconst DockernetesModule = (props: RootProps) => (\n  <Provider store={props.store}>\n    <ConnectedRouter history={props.history}>\n      <ApplicationRouter />\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default DockernetesModule;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts",["106","107"],"import { Action, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport { ThunkAction } from 'redux-thunk';\nimport createRootReducer from './rootReducer';\nimport LogRocket from 'logrocket';\n\nexport const history = createHashHistory();\nconst router = routerMiddleware(history);\nconst middleware = [\n  ...getDefaultMiddleware(),\n  router,\n  LogRocket.reduxMiddleware(),\n];\n\nconst rootReducer = createRootReducer(history);\n\nconst excludeLoggerEnvs = ['test', 'production'];\nconst shouldIncludeLogger = !excludeLoggerEnvs.includes(\n  process.env.NODE_ENV || '',\n);\n\nif (shouldIncludeLogger) {\n  const logger = createLogger({\n    level: 'info',\n    collapsed: true,\n  });\n  middleware.push(logger);\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const configuredStore = (initialState?: RootState) => {\n  return configureStore({\n    preloadedState: initialState,\n    reducer: rootReducer,\n    middleware: middleware,\n  });\n};\n\nexport const getCurrentPathname = (state: RootState) =>\n  state.router.location.pathname;\nexport type Store = ReturnType<typeof configuredStore>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts",["108"],"import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport homeReducer from '../features/home/HomeSlice';\n\nexport default function createRootReducer(history: History) {\n  return combineReducers({\n    router: connectRouter(history),\n    home: homeReducer,\n  });\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx",["109","110","111","112","113","114","115","116"],"import React from 'react';\nimport LoadingScreen from '../components/LoadingScreen';\nimport App from './App';\nimport Navigation from '../components/NavigationBar';\nimport { Route, Switch } from 'react-router-dom';\nimport route from '../constants/routes.json';\n\nexport default class ApplicationRouter extends React.PureComponent {\n  LazyLoadingScreen = (name: string) => <LoadingScreen name={name} />;\n  LazyHomeContainer = React.lazy(() => import('./HomePage'));\n  LazyCreateContainerFormContainer = React.lazy(\n    () => import('./CreateContainer'),\n  );\n  LazyContainerListContainer = React.lazy(() => import('./ContainerListPage'));\n\n  HomePage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyHomeContainer {...props} />\n    </React.Suspense>\n  );\n\n  CreateContainerPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyCreateContainerFormContainer {...props} />\n    </React.Suspense>\n  );\n\n  ContainerListPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyContainerListContainer {...props} />\n    </React.Suspense>\n  );\n\n  public render() {\n    return (\n      <App>\n        <Navigation isLoading={false} />\n        <Switch>\n          <Route exact path={route.HOME.path} component={this.HomePage} />\n          <Route\n            path={route.CREATE_CONTAINERS.path}\n            component={this.CreateContainerPage}\n          />\n          <Route\n            path={route.CONTAINERS.path}\n            component={this.ContainerListPage}\n          />\n        </Switch>\n      </App>\n    );\n  }\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts",[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx",["117","118"],"import React, { ReactNode } from 'react';\nimport { Classes } from '@blueprintjs/core';\n\ntype AppProps = {\n  children: ReactNode;\n};\n\nexport default function App(props: AppProps) {\n  const { children } = props;\n  return <div>{children}</div>;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx",["119"],"import React from 'react';\nimport HomeContainer from '../features/home/Home';\n\nexport default function HomePage() {\n  return <HomeContainer />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx",["120","121"],"import React, { ReactElement, useEffect } from 'react';\nimport {\n  Alignment,\n  Button,\n  Classes,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  NavbarHeading,\n  Tag,\n  Colors,\n} from '@blueprintjs/core';\n\nimport routes from '../constants/routes.json';\nimport { Link } from 'react-router-dom';\nimport { getCurrentPathname } from '../store/store';\nimport { useSelector } from 'react-redux';\n// import {\n//   checkApiStatus,\n//   checkDockerStatus,\n//   getApiStatus,\n//   getDockerStatus,\n// } from '../features/home/HomeSlice';\n\ninterface INavigationItemProps {\n  route: string;\n  name: string;\n  classNames: string;\n  currentLocation: string;\n}\n\nconst NavigationItem = (props: INavigationItemProps): ReactElement => {\n  const { route, classNames, name, currentLocation } = props;\n  const isCurrent = currentLocation == route;\n  console.log(isCurrent);\n  return (\n    <>\n      <Link to={route}>\n        <Button\n          text={name}\n          minimal\n          className={classNames}\n          style={{ color: Colors.GRAY5 }}\n          active={isCurrent}\n        />\n      </Link>\n    </>\n  );\n};\n\ninterface NavigationBarProps {\n  isLoading: boolean;\n}\n\nfunction Navigation(props: NavigationBarProps): ReactElement {\n  // useEffect(() => {\n  //   checkApiStatus();\n  //   checkDockerStatus();\n  // });\n\n  const { isLoading } = props;\n  const elementIsLoading = isLoading ? Classes.SKELETON : '';\n  const currentPage = useSelector(getCurrentPathname);\n  // const dockerStatus = useSelector(getDockerStatus);\n  // const apiStatus = useSelector(getApiStatus);\n\n  const leftMenuRoutes = [\n    routes.HOME,\n    routes.CONTAINERS,\n    routes.CREATE_CONTAINERS,\n    routes.IMAGES,\n  ];\n\n  const LeftMenuItems = leftMenuRoutes.map((item, id) => (\n    <NavigationItem\n      key={id}\n      route={item.path}\n      name={item.title}\n      classNames={elementIsLoading}\n      currentLocation={currentPage}\n    />\n  ));\n\n  const rightMenuRoutes = [routes.SETTINGS];\n  const RightMenuItems = rightMenuRoutes.map((item, id) => (\n    <NavigationItem\n      key={id}\n      route={item.path}\n      name={item.title}\n      classNames={elementIsLoading}\n      currentLocation={currentPage}\n    />\n  ));\n\n  return (\n    <Navbar className={Classes.DARK}>\n      <NavbarGroup align={Alignment.LEFT}>\n        <NavbarHeading className={elementIsLoading}>Dockernetes</NavbarHeading>\n        <NavbarDivider />\n        {LeftMenuItems}\n      </NavbarGroup>\n      <NavbarGroup align={Alignment.RIGHT}>{RightMenuItems}</NavbarGroup>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx",["122"],"import React from 'react';\nimport { Spinner } from '@blueprintjs/core';\n\nexport interface LoadingScreenProps {\n  name: string;\n  size?: number;\n}\n\nexport default function LoadingScreen(props: LoadingScreenProps) {\n  const { name, size } = props;\n  const spinnerSize = size != null ? size : 100;\n\n  return (\n    <>\n      <Spinner size={spinnerSize} intent=\"success\" />\n      <h1>Loading {name}...</h1>\n    </>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx",["123","124"],"import { IconName, NonIdealState } from '@blueprintjs/core';\nimport React, { ReactElement } from 'react';\nimport AxiosClient from '../../api/Client';\nimport HomeCard from '../../components/HomeCard';\n\nimport { Status } from '../../api/Status';\n\ntype NoContainersFoundProps = {\n  icon: IconName;\n  description: ReactElement;\n  message: string;\n};\n\nfunction NoContainersFound(props: NoContainersFoundProps): ReactElement {\n  const { icon, description, message } = props;\n  return (\n    <NonIdealState icon={icon} title={message} description={description} />\n  );\n}\n\nfunction HomeContainer() {\n  const [responseData, setResponseData] = React.useState<Status | null>(null);\n  const [panelErrored, setPanelErrored] = React.useState(false);\n\n  // Fetch data from the server. If error occurs then render the error message.\n  const fetchInfo = React.useCallback(() => {\n    AxiosClient.get('status')\n      .then((response) => {\n        setResponseData(response.data);\n      })\n      .catch((error) => {\n        setPanelErrored(true);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetchInfo();\n  }, [fetchInfo]);\n\n  return panelErrored ? (\n    <NoContainersFound\n      description={<>Error in loading docker environment</>}\n      icon={'cross'}\n      message={'Please check your Docker environment settings'}\n    />\n  ) : (\n    <div style={{ padding: '1rem' }}>\n      <h1>Dashboard</h1>\n      <HomeCard\n        id={responseData?.id ?? '1234'}\n        name={responseData?.environmentName ?? 'fake local'}\n        containerCount={responseData?.containers ?? 0}\n        imageCount={responseData?.images ?? 0}\n        dockerRootDirectory={\n          responseData?.dockerRootDirectory ?? '/var/sock/docker'\n        }\n        cpuCount={responseData?.cpuCount ?? 4}\n        memoryCount={responseData?.memoryInUse ?? 21348984}\n      />\n    </div>\n  );\n}\n\nexport default HomeContainer;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerListItem.tsx",["125","126"],"import { Card, Elevation, Tag, Intent, Divider } from '@blueprintjs/core';\nimport React, { Component } from 'react';\nimport { ContainerButtons } from './ContainerButtons';\n\ntype ContainerStatusProps = { status: string };\n\nfunction ContainerStatus(props: ContainerStatusProps) {\n  const { status } = props;\n  const intentOptions = new Map([['running', Intent.SUCCESS]]);\n\n  const intent = intentOptions.get(status);\n\n  return (\n    <Tag intent={intent} round title={status} large>\n      {status}\n    </Tag>\n  );\n}\n\nexport interface ContainerListItemProps {\n  id?: string;\n  name?: string; // the name of the parsedContainer\n  status?: string; // The status will either be: running/stopped\n  image?: string; // the name of the image\n  created?: string; // when the image was created\n  host?: string; // who is hosting this parsedContainer\n  publishedPorts?: string; // what ports are public\n  ownership?: string; // who owns this damn parsedContainer\n}\n\nclass ContainerListItem extends Component<ContainerListItemProps, any> {\n  render() {\n    const {\n      id,\n      name,\n      status,\n      image,\n      created,\n      host,\n      publishedPorts,\n      ownership,\n    } = this.props;\n\n    return (\n      <Card id={id} elevation={Elevation.THREE} style={{ margin: '1em' }}>\n        <div>\n          <h2 className={'bp3-heading'}>\n            {`${name}`}{' '}\n            <ContainerStatus\n              status={status === undefined ? 'running' : status}\n            />\n          </h2>\n          <Divider />\n          <br />\n          <p className={'bp3-running-text'}>ID: {id}</p>\n          <p className={'bp3-running-text'}>Image Name: {image}</p>\n          <p className={'bp3-running-text'}>Created Time: {created}</p>\n          <p className={'bp3-running-text'}>Host: {host}</p>\n          <p className={'bp3-running-text'}>\n            Published Ports: {publishedPorts}\n          </p>\n          <p className={'bp3-running-text'}>Ownership: {ownership}</p>\n        </div>\n        <Divider />\n        <ContainerButtons containerId={'1234'} />\n      </Card>\n    );\n  }\n}\n\nexport default ContainerListItem;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx",["127"],"import { Button, ButtonGroup, Intent, Toaster } from '@blueprintjs/core';\nimport React from 'react';\n\nexport const AppToaster = Toaster.create({\n  position: 'top-right',\n  maxToasts: 3,\n});\n\nexport interface IContainerButtonProps {\n  containerId: string;\n}\n\nexport class ContainerButtons extends React.PureComponent<IContainerButtonProps> {\n  public render() {\n    return (\n      <>\n        <div>\n          <h3>Container action buttons</h3>\n        </div>\n        <ButtonGroup large>\n          {this.StartButton}\n          {this.StopButton}\n          {this.KillButton}\n        </ButtonGroup>{' '}\n        <ButtonGroup large>\n          {this.RestartButton}\n          {this.ResumeButton}\n          {this.DeleteButton}\n        </ButtonGroup>\n        <Toaster />\n      </>\n    );\n  }\n\n  // TODO: Add network calls to all of these\n  private handleStartContainer() {\n    // Show the toast optimistically\n    this.showToast('Starting parsedContainer...', 'success');\n    // Add logic to start creating the parsedContainer here\n    // Then finally update and let the thing know that the conatiner ist started\n    setTimeout(\n      () =>\n        this.showToast(`Started parsedContainer ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleStopContainer() {\n    this.showToast('Stopping parsedContainer...', 'warning', 1000);\n\n    setTimeout(() => this.showToast('Stopped parsedContainer.', 'none'), 3000);\n  }\n\n  private handleKillContainer() {\n    this.showToast('Killing parsedContainer...', 'danger', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Killed parsedContainer ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleRestartContainer() {\n    this.showToast('Restarting parsedContainer...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Restarted parsedContainer ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleResumeContainer() {\n    this.showToast('Resuming parsedContainer...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Resumed parsedContainer ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleRemoveContainer() {\n    this.showToast('Removing parsedContainer...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Removed parsedContainer ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private showToast = (message: string, intent: Intent, timeout?: number) => {\n    AppToaster.show({ message: message, intent: intent, timeout: timeout });\n  };\n\n  private StartButton = (\n    <Button\n      icon={'play'}\n      intent={Intent.SUCCESS}\n      onClick={this.handleStartContainer.bind(this)}\n    >\n      Start\n    </Button>\n  );\n\n  private StopButton = (\n    <Button\n      icon={'stop'}\n      intent={Intent.DANGER}\n      onClick={this.handleStopContainer.bind(this)}\n    >\n      Stop\n    </Button>\n  );\n\n  private KillButton = (\n    <Button\n      icon={'delete'}\n      intent={Intent.DANGER}\n      onClick={this.handleKillContainer.bind(this)}\n    >\n      Kill\n    </Button>\n  );\n\n  private RestartButton = (\n    <Button\n      icon={'reset'}\n      intent={Intent.WARNING}\n      onClick={this.handleRestartContainer.bind(this)}\n    >\n      Restart\n    </Button>\n  );\n\n  private ResumeButton = (\n    <Button\n      icon={'pause'}\n      intent={Intent.WARNING}\n      onClick={this.handleResumeContainer.bind(this)}\n    >\n      Resume\n    </Button>\n  );\n\n  private DeleteButton = (\n    <Button\n      icon={'trash'}\n      intent={Intent.DANGER}\n      onClick={this.handleRemoveContainer.bind(this)}\n    >\n      Delete\n    </Button>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx",["128"],"import React from 'react';\nimport { CreateContainerForm } from '../features/createContainer/CreateContainerForm';\n\nexport default function CreateContainer() {\n  return <CreateContainerForm />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx",["129"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx",["130"],"import React from 'react';\nimport { ContainerList } from '../features/containersList/ContainerList';\n\nexport default function ContainerListPage() {\n  return <ContainerList />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx",["131"],"import React from 'react';\nimport ContainerListItem from '../../components/ContainerListItem';\nimport { transformObj } from '../../utils/util';\n\nexport interface IContainerListProps {\n  id?: string;\n}\n\nexport function ContainerList() {\n  const obj = {\n    Id: 'cdca9b76a4180c44234e4911ae0675b63d94a7b9586348bc2297934561bacd79',\n    Names: ['/portainer_agent'],\n    Image: 'portainer/agent',\n    ImageID:\n      'sha256:c81206f03f4ab591bc8db5782d2a45d0546d5df9ba0ebb55e55fd33bf7f7aed7',\n    Command: './agent',\n    Created: 1616304716,\n    Ports: [\n      { IP: '0.0.0.0', PrivatePort: 9001, PublicPort: 9001, Type: 'tcp' },\n    ],\n    Labels: {\n      'desktop.docker.io/binds/1/Source': '/var/run/docker.sock',\n      'desktop.docker.io/binds/1/SourceKind': 'dockerSocketProxied',\n      'desktop.docker.io/binds/1/Target': '/var/run/docker.sock',\n    },\n    State: 'running',\n    Status: 'Up 25 hours',\n    HostConfig: { NetworkMode: 'default' },\n    NetworkSettings: {\n      Networks: {\n        bridge: {\n          IPAMConfig: null,\n          Links: null,\n          Aliases: null,\n          NetworkID:\n            'bc566736e7d43c51b453589ebf18962599a247291516bc02e6ffcec0356dc6a0',\n          EndpointID:\n            '2a0ac7121cfdc493b7128c64a63c2608ce561dabbd77ec065676fe01fa43279a',\n          Gateway: '172.17.0.1',\n          IPAddress: '172.17.0.2',\n          IPPrefixLen: 16,\n          IPv6Gateway: '',\n          GlobalIPv6Address: '',\n          GlobalIPv6PrefixLen: 0,\n          MacAddress: '02:42:ac:11:00:02',\n          DriverOpts: null,\n        },\n      },\n    },\n    Mounts: [\n      {\n        Type: 'bind',\n        Source: '/var/lib/docker/volumes',\n        Destination: '/var/lib/docker/volumes',\n        Mode: '',\n        RW: true,\n        Propagation: 'rslave',\n      },\n      {\n        Type: 'bind',\n        Source: '/run/host-services/docker.proxy.sock',\n        Destination: '/var/run/docker.sock',\n        Mode: '',\n        RW: true,\n        Propagation: 'rprivate',\n      },\n    ],\n  };\n\n  console.log(transformObj(obj));\n  return (\n    <>\n      <ContainerListItem />\n      <ContainerListItem />\n      <ContainerListItem />\n    </>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx",["132"],"import { Card, Elevation, Icon, Intent, Tag } from '@blueprintjs/core';\nimport React from 'react';\n\nexport interface IHomeCardProps {\n  id: string;\n  name: string;\n  containerCount: number;\n  imageCount: number;\n  dockerRootDirectory: string;\n  cpuCount: number;\n  memoryCount: number;\n}\n\nexport default function HomeCard(props: IHomeCardProps) {\n  const {\n    id,\n    name,\n    containerCount,\n    imageCount,\n    dockerRootDirectory,\n    cpuCount,\n    memoryCount,\n  } = props;\n  return (\n    <Card id={id} elevation={Elevation.THREE}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          margin: 'auto',\n        }}\n      >\n        <h2>{name}</h2>\n        <Tag intent={Intent.SUCCESS} round>\n          up\n        </Tag>\n      </div>\n      <div>\n        <p>\n          <Icon icon=\"layers\" /> Containers: {containerCount}\n        </p>\n        <p>\n          <Icon icon=\"database\" />\n          Volumes: {containerCount}\n        </p>\n        <p>\n          <Icon icon=\"folder-close\" /> Images: {imageCount}\n        </p>\n        <p>Docker root directory: {dockerRootDirectory}</p>\n        <p>Number of CPUs: {cpuCount}</p>\n        <p>Memory in use: {formatBytes(memoryCount, 1)}</p>\n      </div>\n    </Card>\n  );\n}\n\n/**\n * Formats the bytes into some human readable format, i.e. 1.2 GB, 3 MB,\n * @param bytes the number of bytes to process\n * @param decimals the number of decimal points to round it out to\n */\nfunction formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm: number = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Client.ts",[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/util.ts",["133","134","135","136","137","138","139","140"],"/** Event handler that exposes the target element's value as a boolean. */\nimport React from 'react';\n\nexport function handleBooleanChange(handler: (checked: boolean) => void) {\n  return (event: React.FormEvent<HTMLElement>) =>\n    handler((event.target as HTMLInputElement).checked);\n}\n\n/** Event handler that exposes the target element's value as a string. */\nexport function handleStringChange(handler: (value: string) => void) {\n  return (event: React.FormEvent<HTMLElement>) =>\n    handler((event.target as HTMLInputElement).value);\n}\n\n/** Event handler that exposes the target element's value as an inferred generic type. */\nexport function handleValueChange<T>(handler: (value: T) => void) {\n  return (event: React.FormEvent<HTMLElement>) =>\n    handler(((event.target as HTMLInputElement).value as unknown) as T);\n}\n\n/** Event handler that exposes the target element's value as a number. */\nexport function handleNumberChange(handler: (value: number) => void) {\n  return handleStringChange((value) => handler(+value));\n}\n\nexport const transformObj = (obj: any) => {\n  return Object.keys(obj).reduce((acc: any, key) => {\n    if (key.indexOf('.') >= 0) {\n      const [parentKey, childKey] = key.split('.');\n      acc[parentKey] = acc[parentKey] || {};\n      acc[parentKey][childKey] = obj[key];\n    } else {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {});\n};\n",{"ruleId":"141","severity":1,"message":"142","line":3,"column":25,"nodeType":"143","messageId":"144","endLine":3,"endColumn":57},{"ruleId":"141","severity":1,"message":"142","line":13,"column":27,"nodeType":"143","messageId":"144","endLine":13,"endColumn":48},{"ruleId":"141","severity":1,"message":"142","line":34,"column":32,"nodeType":"143","messageId":"144","endLine":34,"endColumn":61},{"ruleId":"141","severity":1,"message":"142","line":42,"column":35,"nodeType":"143","messageId":"144","endLine":42,"endColumn":56},{"ruleId":"141","severity":1,"message":"142","line":6,"column":16,"nodeType":"145","messageId":"144","endLine":6,"endColumn":60},{"ruleId":"141","severity":1,"message":"142","line":9,"column":23,"nodeType":"143","messageId":"144","endLine":9,"endColumn":40},{"ruleId":"141","severity":1,"message":"142","line":16,"column":14,"nodeType":"143","messageId":"144","endLine":16,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":16,"column":37,"nodeType":"148","messageId":"149","endLine":16,"endColumn":40,"suggestions":"150"},{"ruleId":"141","severity":1,"message":"142","line":22,"column":25,"nodeType":"143","messageId":"144","endLine":22,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":22,"column":48,"nodeType":"148","messageId":"149","endLine":22,"endColumn":51,"suggestions":"151"},{"ruleId":"141","severity":1,"message":"142","line":28,"column":23,"nodeType":"143","messageId":"144","endLine":28,"endColumn":54},{"ruleId":"146","severity":1,"message":"147","line":28,"column":46,"nodeType":"148","messageId":"149","endLine":28,"endColumn":49,"suggestions":"152"},{"ruleId":"141","severity":1,"message":"142","line":34,"column":3,"nodeType":"153","messageId":"144","endLine":34,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":8,"column":16,"nodeType":"145","messageId":"144","endLine":8,"endColumn":45},{"ruleId":"141","severity":1,"message":"142","line":4,"column":16,"nodeType":"145","messageId":"144","endLine":4,"endColumn":35},{"ruleId":"154","severity":1,"message":"158","line":1,"column":31,"nodeType":"156","messageId":"157","endLine":1,"endColumn":40},{"ruleId":"154","severity":1,"message":"159","line":10,"column":3,"nodeType":"156","messageId":"157","endLine":10,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":9,"column":16,"nodeType":"145","messageId":"144","endLine":9,"endColumn":65},{"ruleId":"141","severity":1,"message":"142","line":21,"column":1,"nodeType":"145","messageId":"144","endLine":21,"endColumn":25},{"ruleId":"154","severity":1,"message":"160","line":31,"column":15,"nodeType":"156","messageId":"157","endLine":31,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":31,"column":67,"nodeType":"148","messageId":"149","endLine":31,"endColumn":70,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"142","line":32,"column":3,"nodeType":"153","messageId":"144","endLine":32,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":14,"column":3,"nodeType":"153","messageId":"144","endLine":14,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":4,"column":16,"nodeType":"145","messageId":"144","endLine":4,"endColumn":42},{"ruleId":"141","severity":1,"message":"142","line":8,"column":3,"nodeType":"153","messageId":"144","endLine":8,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":4,"column":16,"nodeType":"145","messageId":"144","endLine":4,"endColumn":44},{"ruleId":"141","severity":1,"message":"142","line":9,"column":8,"nodeType":"145","messageId":"144","endLine":9,"endColumn":32},{"ruleId":"141","severity":1,"message":"142","line":14,"column":16,"nodeType":"145","messageId":"144","endLine":14,"endColumn":56},{"ruleId":"141","severity":1,"message":"142","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":50},{"ruleId":"141","severity":1,"message":"142","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":50},{"ruleId":"141","severity":1,"message":"142","line":17,"column":10,"nodeType":"143","messageId":"144","endLine":17,"endColumn":50},{"ruleId":"141","severity":1,"message":"142","line":22,"column":8,"nodeType":"145","messageId":"144","endLine":22,"endColumn":69},{"ruleId":"141","severity":1,"message":"142","line":26,"column":29,"nodeType":"143","messageId":"144","endLine":26,"endColumn":42},{"ruleId":"141","severity":1,"message":"162","line":26,"column":30,"nodeType":"156","messageId":"163","endLine":26,"endColumn":38},{"ruleId":"146","severity":1,"message":"147","line":26,"column":35,"nodeType":"148","messageId":"149","endLine":26,"endColumn":38,"suggestions":"164"},{"ruleId":"146","severity":1,"message":"147","line":27,"column":40,"nodeType":"148","messageId":"149","endLine":27,"endColumn":43,"suggestions":"165"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["166","167"],["168","169"],["170","171"],"FunctionExpression","@typescript-eslint/no-unused-vars","'Classes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Tag' is defined but never used.","'error' is defined but never used.",["172","173"],"Argument 'obj' should be typed with a non-any type.","anyTypedArg",["174","175"],["176","177"],{"messageId":"178","fix":"179","desc":"180"},{"messageId":"181","fix":"182","desc":"183"},{"messageId":"178","fix":"184","desc":"180"},{"messageId":"181","fix":"185","desc":"183"},{"messageId":"178","fix":"186","desc":"180"},{"messageId":"181","fix":"187","desc":"183"},{"messageId":"178","fix":"188","desc":"180"},{"messageId":"181","fix":"189","desc":"183"},{"messageId":"178","fix":"190","desc":"180"},{"messageId":"181","fix":"191","desc":"183"},{"messageId":"178","fix":"192","desc":"180"},{"messageId":"181","fix":"193","desc":"183"},"suggestUnknown",{"range":"194","text":"195"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"194","text":"196"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"197","text":"195"},{"range":"197","text":"196"},{"range":"198","text":"195"},{"range":"198","text":"196"},{"range":"199","text":"195"},{"range":"199","text":"196"},{"range":"200","text":"195"},{"range":"200","text":"196"},{"range":"201","text":"195"},{"range":"201","text":"196"},[672,675],"unknown","never",[857,860],[1055,1058],[1000,1003],[1064,1067],[1113,1116]]