[{"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx":"1","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts":"2","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx":"3","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts":"4","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts":"5","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx":"6","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts":"7","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx":"8","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx":"9","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx":"10","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx":"11","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx":"12","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerListItem.tsx":"13","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx":"14","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx":"15","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx":"16","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx":"17","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx":"18","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx":"19"},{"size":881,"mtime":1611982248182,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1611822231897,"results":"22","hashOfConfig":"21"},{"size":546,"mtime":1611980605356,"results":"23","hashOfConfig":"21"},{"size":1330,"mtime":1612075577525,"results":"24","hashOfConfig":"21"},{"size":343,"mtime":1611979823354,"results":"25","hashOfConfig":"21"},{"size":1669,"mtime":1616388777275,"results":"26","hashOfConfig":"21"},{"size":1854,"mtime":1616617992462,"results":"27","hashOfConfig":"21"},{"size":244,"mtime":1611822231897,"results":"28","hashOfConfig":"21"},{"size":146,"mtime":1616305539097,"results":"29","hashOfConfig":"21"},{"size":2510,"mtime":1616617807407,"results":"30","hashOfConfig":"21"},{"size":416,"mtime":1611848875100,"results":"31","hashOfConfig":"21"},{"size":1573,"mtime":1616618027877,"results":"32","hashOfConfig":"21"},{"size":2086,"mtime":1616388835818,"results":"33","hashOfConfig":"21"},{"size":3557,"mtime":1616305105298,"results":"34","hashOfConfig":"21"},{"size":195,"mtime":1616387934143,"results":"35","hashOfConfig":"21"},{"size":1290,"mtime":1616388276991,"results":"36","hashOfConfig":"21"},{"size":178,"mtime":1616388634918,"results":"37","hashOfConfig":"21"},{"size":461,"mtime":1616515567699,"results":"38","hashOfConfig":"21"},{"size":1828,"mtime":1616617675629,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"12y6c6c",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"42"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx",[],[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts",["93"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx",["94"],"import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport { History } from 'history';\nimport { Store } from './store/store';\nimport ApplicationRouter from './containers/Router';\n\ninterface RootProps {\n  store: Store;\n  history: History;\n}\n\nconst DockernetesModule = (props: RootProps) => (\n  <Provider store={props.store}>\n    <ConnectedRouter history={props.history}>\n      <ApplicationRouter />\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default DockernetesModule;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts",["95","96"],"import { Action, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport { ThunkAction } from 'redux-thunk';\nimport createRootReducer from './rootReducer';\nimport LogRocket from 'logrocket';\n\nexport const history = createHashHistory();\nconst router = routerMiddleware(history);\nconst middleware = [\n  ...getDefaultMiddleware(),\n  router,\n  LogRocket.reduxMiddleware(),\n];\n\nconst rootReducer = createRootReducer(history);\n\nconst excludeLoggerEnvs = ['test', 'production'];\nconst shouldIncludeLogger = !excludeLoggerEnvs.includes(\n  process.env.NODE_ENV || '',\n);\n\nif (shouldIncludeLogger) {\n  const logger = createLogger({\n    level: 'info',\n    collapsed: true,\n  });\n  middleware.push(logger);\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const configuredStore = (initialState?: RootState) => {\n  return configureStore({\n    preloadedState: initialState,\n    reducer: rootReducer,\n    middleware: middleware,\n  });\n};\n\nexport const getCurrentPathname = (state: RootState) =>\n  state.router.location.pathname;\nexport type Store = ReturnType<typeof configuredStore>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts",["97"],"import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport homeReducer from '../features/home/HomeSlice';\n\nexport default function createRootReducer(history: History) {\n  return combineReducers({\n    router: connectRouter(history),\n    home: homeReducer,\n  });\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx",["98","99","100","101","102","103","104","105"],"import React from 'react';\nimport LoadingScreen from '../components/LoadingScreen';\nimport App from './App';\nimport Navigation from '../components/NavigationBar';\nimport { Route, Switch } from 'react-router-dom';\nimport route from '../constants/routes.json';\n\nexport default class ApplicationRouter extends React.PureComponent {\n  LazyLoadingScreen = (name: string) => <LoadingScreen name={name} />;\n  LazyHomeContainer = React.lazy(() => import('./HomePage'));\n  LazyCreateContainerFormContainer = React.lazy(\n    () => import('./CreateContainer'),\n  );\n  LazyContainerListContainer = React.lazy(() => import('./ContainerListPage'));\n\n  HomePage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyHomeContainer {...props} />\n    </React.Suspense>\n  );\n\n  CreateContainerPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyCreateContainerFormContainer {...props} />\n    </React.Suspense>\n  );\n\n  ContainerListPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyContainerListContainer {...props} />\n    </React.Suspense>\n  );\n\n  public render() {\n    return (\n      <App>\n        <Navigation isLoading={false} />\n        <Switch>\n          <Route exact path={route.HOME.path} component={this.HomePage} />\n          <Route\n            path={route.CREATE_CONTAINERS.path}\n            component={this.CreateContainerPage}\n          />\n          <Route\n            path={route.CONTAINERS.path}\n            component={this.ContainerListPage}\n          />\n        </Switch>\n      </App>\n    );\n  }\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts",["106","107"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx",["108","109"],"import React, { ReactNode } from 'react';\nimport { Classes } from '@blueprintjs/core';\n\ntype AppProps = {\n  children: ReactNode;\n};\n\nexport default function App(props: AppProps) {\n  const { children } = props;\n  return <div>{children}</div>;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx",["110"],"import React from 'react';\nimport HomeContainer from '../features/home/Home';\n\nexport default function HomePage() {\n  return <HomeContainer />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx",["111","112","113"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx",["114"],"import React from 'react';\nimport { Spinner } from '@blueprintjs/core';\n\nexport interface LoadingScreenProps {\n  name: string;\n  size?: number;\n}\n\nexport default function LoadingScreen(props: LoadingScreenProps) {\n  const { name, size } = props;\n  const spinnerSize = size != null ? size : 100;\n\n  return (\n    <>\n      <Spinner size={spinnerSize} intent=\"success\" />\n      <h1>Loading {name}...</h1>\n    </>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx",["115","116","117","118","119","120","121","122","123","124","125","126"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerListItem.tsx",["127","128"],"import { Card, Elevation, Tag, Intent, Divider } from '@blueprintjs/core';\nimport React, { Component } from 'react';\nimport { ContainerButtons } from './ContainerButtons';\n\ntype ContainerStatusProps = { status: string };\n\nfunction ContainerStatus(props: ContainerStatusProps) {\n  const { status } = props;\n  const intentOptions = new Map([['running', Intent.SUCCESS]]);\n\n  const intent = intentOptions.get(status);\n\n  return (\n    <Tag intent={intent} round title={status} large>\n      {status}\n    </Tag>\n  );\n}\n\nexport interface ContainerListItemProps {\n  id?: string;\n  name?: string; // the name of the container\n  status?: string; // The status will either be: running/stopped\n  image?: string; // the name of the image\n  created?: string; // when the image was created\n  host?: string; // who is hosting this container\n  publishedPorts?: string; // what ports are public\n  ownership?: string; // who owns this damn container\n}\n\nclass ContainerListItem extends Component<ContainerListItemProps, any> {\n  render() {\n    const {\n      id,\n      name,\n      status,\n      image,\n      created,\n      host,\n      publishedPorts,\n      ownership,\n    } = this.props;\n\n    return (\n      <Card id={id} elevation={Elevation.THREE} style={{ margin: '1em' }}>\n        <div>\n          <h2 className={'bp3-heading'}>\n            {`${name}`}{' '}\n            <ContainerStatus\n              status={status === undefined ? 'running' : status}\n            />\n          </h2>\n          <Divider />\n          <br />\n          <p className={'bp3-running-text'}>ID: {id}</p>\n          <p className={'bp3-running-text'}>Image Name: {image}</p>\n          <p className={'bp3-running-text'}>Created Time: {created}</p>\n          <p className={'bp3-running-text'}>Host: {host}</p>\n          <p className={'bp3-running-text'}>\n            Published Ports: {publishedPorts}\n          </p>\n          <p className={'bp3-running-text'}>Ownership: {ownership}</p>\n        </div>\n        <Divider />\n        <ContainerButtons containerId={'1234'} />\n      </Card>\n    );\n  }\n}\n\nexport default ContainerListItem;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx",["129"],"import { Button, ButtonGroup, Intent, Toaster } from '@blueprintjs/core';\nimport React from 'react';\n\nexport const AppToaster = Toaster.create({\n  position: 'top-right',\n  maxToasts: 3,\n});\n\nexport interface IContainerButtonProps {\n  containerId: string;\n}\n\nexport class ContainerButtons extends React.PureComponent<IContainerButtonProps> {\n  public render() {\n    return (\n      <>\n        <div>\n          <h3>Container action buttons</h3>\n        </div>\n        <ButtonGroup large>\n          {this.StartButton}\n          {this.StopButton}\n          {this.KillButton}\n        </ButtonGroup>{' '}\n        <ButtonGroup large>\n          {this.RestartButton}\n          {this.ResumeButton}\n          {this.DeleteButton}\n        </ButtonGroup>\n        <Toaster />\n      </>\n    );\n  }\n\n  // TODO: Add network calls to all of these\n  private handleStartContainer() {\n    // Show the toast optimistically\n    this.showToast('Starting container...', 'success');\n    // Add logic to start creating the container here\n    // Then finally update and let the thing know that the conatiner ist started\n    setTimeout(\n      () =>\n        this.showToast(`Started container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleStopContainer() {\n    this.showToast('Stopping container...', 'warning', 1000);\n\n    setTimeout(() => this.showToast('Stopped container.', 'none'), 3000);\n  }\n\n  private handleKillContainer() {\n    this.showToast('Killing container...', 'danger', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Killed container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleRestartContainer() {\n    this.showToast('Restarting container...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Restarted container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleResumeContainer() {\n    this.showToast('Resuming container...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Resumed container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleRemoveContainer() {\n    this.showToast('Removing container...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Removed container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private showToast = (message: string, intent: Intent, timeout?: number) => {\n    AppToaster.show({ message: message, intent: intent, timeout: timeout });\n  };\n\n  private StartButton = (\n    <Button\n      icon={'play'}\n      intent={Intent.SUCCESS}\n      onClick={this.handleStartContainer.bind(this)}\n    >\n      Start\n    </Button>\n  );\n\n  private StopButton = (\n    <Button\n      icon={'stop'}\n      intent={Intent.DANGER}\n      onClick={this.handleStopContainer.bind(this)}\n    >\n      Stop\n    </Button>\n  );\n\n  private KillButton = (\n    <Button\n      icon={'delete'}\n      intent={Intent.DANGER}\n      onClick={this.handleKillContainer.bind(this)}\n    >\n      Kill\n    </Button>\n  );\n\n  private RestartButton = (\n    <Button\n      icon={'reset'}\n      intent={Intent.WARNING}\n      onClick={this.handleRestartContainer.bind(this)}\n    >\n      Restart\n    </Button>\n  );\n\n  private ResumeButton = (\n    <Button\n      icon={'pause'}\n      intent={Intent.WARNING}\n      onClick={this.handleResumeContainer.bind(this)}\n    >\n      Resume\n    </Button>\n  );\n\n  private DeleteButton = (\n    <Button\n      icon={'trash'}\n      intent={Intent.DANGER}\n      onClick={this.handleRemoveContainer.bind(this)}\n    >\n      Delete\n    </Button>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx",["130"],"import React from 'react';\nimport { CreateContainerForm } from '../features/createContainer/CreateContainerForm';\n\nexport default function CreateContainer() {\n  return <CreateContainerForm />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx",["131"],"import { Button, FormGroup, InputGroup } from '@blueprintjs/core';\nimport React from 'react';\n\nexport class CreateContainerForm extends React.PureComponent {\n  private containerNameInput = React.createRef<HTMLInputElement>();\n  private imageNameInput = React.createRef<HTMLInputElement>();\n\n  render() {\n    return (\n      <>\n        <h2>Create a Container</h2>\n        <FormGroup\n          label=\"Container Name\"\n          label-for=\"container-name-input\"\n          labelInfo=\"(leave blank if no name desired)\"\n        >\n          <InputGroup\n            id=\"container-name-input\"\n            large\n            inputRef={this.containerNameInput}\n          />\n        </FormGroup>\n        <FormGroup\n          label=\"Image Name\"\n          label-for=\"container-name-input\"\n          labelInfo=\"(required)\"\n        >\n          <InputGroup\n            id=\"image-name-input\"\n            large\n            inputRef={this.imageNameInput}\n          />\n        </FormGroup>\n        {this.deployContainerButton}\n      </>\n    );\n  }\n\n  private deployContainerButton = (\n    <Button large icon=\"layers\" onClick={this.handleDeployContainer}>\n      Deploy this container\n    </Button>\n  );\n\n  private handleDeployContainer() {\n    console.log('Hello world');\n    alert('Deployed the container');\n  }\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx",["132"],"import React from 'react';\nimport { ContainerList } from '../features/containersList/ContainerList';\n\nexport default function ContainerListPage() {\n  return <ContainerList />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx",["133"],"import React from 'react';\nimport ContainerListItem from '../../components/ContainerListItem';\n\nexport interface IContainerListProps {\n  id?: string;\n}\n\n// TODO: What we want to do here is grab all of the user data from the backend\nexport class ContainerList extends React.Component<IContainerListProps> {\n  public render() {\n    return (\n      <>\n        <ContainerListItem />\n        <ContainerListItem />\n        <ContainerListItem />\n      </>\n    );\n  }\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx",["134"],{"ruleId":"135","severity":1,"message":"136","line":3,"column":25,"nodeType":"137","messageId":"138","endLine":3,"endColumn":57},{"ruleId":"135","severity":1,"message":"136","line":13,"column":27,"nodeType":"137","messageId":"138","endLine":13,"endColumn":48},{"ruleId":"135","severity":1,"message":"136","line":34,"column":32,"nodeType":"137","messageId":"138","endLine":34,"endColumn":61},{"ruleId":"135","severity":1,"message":"136","line":42,"column":35,"nodeType":"137","messageId":"138","endLine":42,"endColumn":56},{"ruleId":"135","severity":1,"message":"136","line":6,"column":16,"nodeType":"139","messageId":"138","endLine":6,"endColumn":60},{"ruleId":"135","severity":1,"message":"136","line":9,"column":23,"nodeType":"137","messageId":"138","endLine":9,"endColumn":40},{"ruleId":"135","severity":1,"message":"136","line":16,"column":14,"nodeType":"137","messageId":"138","endLine":16,"endColumn":45},{"ruleId":"140","severity":1,"message":"141","line":16,"column":37,"nodeType":"142","messageId":"143","endLine":16,"endColumn":40,"suggestions":"144"},{"ruleId":"135","severity":1,"message":"136","line":22,"column":25,"nodeType":"137","messageId":"138","endLine":22,"endColumn":56},{"ruleId":"140","severity":1,"message":"141","line":22,"column":48,"nodeType":"142","messageId":"143","endLine":22,"endColumn":51,"suggestions":"145"},{"ruleId":"135","severity":1,"message":"136","line":28,"column":23,"nodeType":"137","messageId":"138","endLine":28,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":28,"column":46,"nodeType":"142","messageId":"143","endLine":28,"endColumn":49,"suggestions":"146"},{"ruleId":"135","severity":1,"message":"136","line":34,"column":3,"nodeType":"147","messageId":"138","endLine":34,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":76,"column":32,"nodeType":"137","messageId":"138","endLine":76,"endColumn":53},{"ruleId":"135","severity":1,"message":"136","line":77,"column":29,"nodeType":"137","messageId":"138","endLine":77,"endColumn":50},{"ruleId":"148","severity":1,"message":"149","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":8,"column":16,"nodeType":"139","messageId":"138","endLine":8,"endColumn":45},{"ruleId":"135","severity":1,"message":"136","line":4,"column":16,"nodeType":"139","messageId":"138","endLine":4,"endColumn":35},{"ruleId":"148","severity":1,"message":"152","line":10,"column":3,"nodeType":"150","messageId":"151","endLine":10,"endColumn":6},{"ruleId":"148","severity":1,"message":"153","line":64,"column":9,"nodeType":"150","messageId":"151","endLine":64,"endColumn":21},{"ruleId":"148","severity":1,"message":"154","line":65,"column":9,"nodeType":"150","messageId":"151","endLine":65,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":9,"column":16,"nodeType":"139","messageId":"138","endLine":9,"endColumn":65},{"ruleId":"148","severity":1,"message":"155","line":2,"column":3,"nodeType":"150","messageId":"151","endLine":2,"endColumn":7},{"ruleId":"148","severity":1,"message":"156","line":3,"column":3,"nodeType":"150","messageId":"151","endLine":3,"endColumn":12},{"ruleId":"148","severity":1,"message":"157","line":5,"column":3,"nodeType":"150","messageId":"151","endLine":5,"endColumn":9},{"ruleId":"148","severity":1,"message":"158","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":8},{"ruleId":"148","severity":1,"message":"152","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":6},{"ruleId":"148","severity":1,"message":"159","line":11,"column":10,"nodeType":"150","messageId":"151","endLine":11,"endColumn":21},{"ruleId":"148","severity":1,"message":"160","line":16,"column":3,"nodeType":"150","messageId":"151","endLine":16,"endColumn":15},{"ruleId":"148","severity":1,"message":"161","line":17,"column":3,"nodeType":"150","messageId":"151","endLine":17,"endColumn":18},{"ruleId":"148","severity":1,"message":"162","line":27,"column":10,"nodeType":"150","messageId":"151","endLine":27,"endColumn":27},{"ruleId":"148","severity":1,"message":"163","line":45,"column":7,"nodeType":"150","messageId":"151","endLine":45,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":54,"column":3,"nodeType":"147","messageId":"138","endLine":54,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":59,"column":3,"nodeType":"147","messageId":"138","endLine":59,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":31,"column":67,"nodeType":"142","messageId":"143","endLine":31,"endColumn":70,"suggestions":"164"},{"ruleId":"135","severity":1,"message":"136","line":32,"column":3,"nodeType":"147","messageId":"138","endLine":32,"endColumn":11},{"ruleId":"135","severity":1,"message":"136","line":14,"column":3,"nodeType":"147","messageId":"138","endLine":14,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":4,"column":16,"nodeType":"139","messageId":"138","endLine":4,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":8,"column":3,"nodeType":"147","messageId":"138","endLine":8,"endColumn":11},{"ruleId":"135","severity":1,"message":"136","line":4,"column":16,"nodeType":"139","messageId":"138","endLine":4,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":10,"column":3,"nodeType":"147","messageId":"138","endLine":10,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":14,"column":16,"nodeType":"139","messageId":"138","endLine":14,"endColumn":56},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["165","166"],["167","168"],["169","170"],"FunctionExpression","@typescript-eslint/no-unused-vars","'Classes' is defined but never used.","Identifier","unusedVar","'Tag' is defined but never used.","'dockerStatus' is assigned a value but never used.","'apiStatus' is assigned a value but never used.","'Card' is defined but never used.","'Elevation' is defined but never used.","'Intent' is defined but never used.","'Label' is defined but never used.","'useSelector' is defined but never used.","'getApiStatus' is defined but never used.","'getDockerStatus' is defined but never used.","'NoContainersFound' is defined but never used.","'description' is assigned a value but never used.",["171","172"],{"messageId":"173","fix":"174","desc":"175"},{"messageId":"176","fix":"177","desc":"178"},{"messageId":"173","fix":"179","desc":"175"},{"messageId":"176","fix":"180","desc":"178"},{"messageId":"173","fix":"181","desc":"175"},{"messageId":"176","fix":"182","desc":"178"},{"messageId":"173","fix":"183","desc":"175"},{"messageId":"176","fix":"184","desc":"178"},"suggestUnknown",{"range":"185","text":"186"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"185","text":"187"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"188","text":"186"},{"range":"188","text":"187"},{"range":"189","text":"186"},{"range":"189","text":"187"},{"range":"190","text":"186"},{"range":"190","text":"187"},[672,675],"unknown","never",[857,860],[1055,1058],[1000,1003]]