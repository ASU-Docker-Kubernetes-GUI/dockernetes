[{"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx":"1","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts":"2","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx":"3","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts":"4","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts":"5","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx":"6","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts":"7","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx":"8","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx":"9","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx":"10","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx":"11","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx":"12","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerListItem.tsx":"13","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx":"14","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx":"15","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx":"16","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx":"17","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx":"18","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx":"19","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Client.ts":"20","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/util.ts":"21","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Container.ts":"22"},{"size":881,"mtime":1611982248182,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1611822231897,"results":"25","hashOfConfig":"24"},{"size":546,"mtime":1611980605356,"results":"26","hashOfConfig":"24"},{"size":1330,"mtime":1612075577525,"results":"27","hashOfConfig":"24"},{"size":343,"mtime":1611979823354,"results":"28","hashOfConfig":"24"},{"size":1669,"mtime":1616388777275,"results":"29","hashOfConfig":"24"},{"size":387,"mtime":1617955346306,"results":"30","hashOfConfig":"24"},{"size":244,"mtime":1611822231897,"results":"31","hashOfConfig":"24"},{"size":146,"mtime":1616305539097,"results":"32","hashOfConfig":"24"},{"size":2546,"mtime":1617954967358,"results":"33","hashOfConfig":"24"},{"size":416,"mtime":1611848875100,"results":"34","hashOfConfig":"24"},{"size":1924,"mtime":1618783440234,"results":"35","hashOfConfig":"24"},{"size":2754,"mtime":1618807957693,"results":"36","hashOfConfig":"24"},{"size":3558,"mtime":1618808007338,"results":"37","hashOfConfig":"24"},{"size":195,"mtime":1616387934143,"results":"38","hashOfConfig":"24"},{"size":2753,"mtime":1618807108242,"results":"39","hashOfConfig":"24"},{"size":178,"mtime":1616388634918,"results":"40","hashOfConfig":"24"},{"size":1585,"mtime":1618786127511,"results":"41","hashOfConfig":"24"},{"size":1853,"mtime":1618777631176,"results":"42","hashOfConfig":"24"},{"size":164,"mtime":1618791581117,"results":"43","hashOfConfig":"24"},{"size":1578,"mtime":1618807488180,"results":"44","hashOfConfig":"24"},{"size":323,"mtime":1618784243184,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"goppdc",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx",[],[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts",["105"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx",["106"],"import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport { History } from 'history';\nimport { Store } from './store/store';\nimport ApplicationRouter from './containers/Router';\n\ninterface RootProps {\n  store: Store;\n  history: History;\n}\n\nconst DockernetesModule = (props: RootProps) => (\n  <Provider store={props.store}>\n    <ConnectedRouter history={props.history}>\n      <ApplicationRouter />\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default DockernetesModule;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts",["107","108"],"import { Action, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport { ThunkAction } from 'redux-thunk';\nimport createRootReducer from './rootReducer';\nimport LogRocket from 'logrocket';\n\nexport const history = createHashHistory();\nconst router = routerMiddleware(history);\nconst middleware = [\n  ...getDefaultMiddleware(),\n  router,\n  LogRocket.reduxMiddleware(),\n];\n\nconst rootReducer = createRootReducer(history);\n\nconst excludeLoggerEnvs = ['test', 'production'];\nconst shouldIncludeLogger = !excludeLoggerEnvs.includes(\n  process.env.NODE_ENV || '',\n);\n\nif (shouldIncludeLogger) {\n  const logger = createLogger({\n    level: 'info',\n    collapsed: true,\n  });\n  middleware.push(logger);\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const configuredStore = (initialState?: RootState) => {\n  return configureStore({\n    preloadedState: initialState,\n    reducer: rootReducer,\n    middleware: middleware,\n  });\n};\n\nexport const getCurrentPathname = (state: RootState) =>\n  state.router.location.pathname;\nexport type Store = ReturnType<typeof configuredStore>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts",["109"],"import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport homeReducer from '../features/home/HomeSlice';\n\nexport default function createRootReducer(history: History) {\n  return combineReducers({\n    router: connectRouter(history),\n    home: homeReducer,\n  });\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx",["110","111","112","113","114","115","116","117"],"import React from 'react';\nimport LoadingScreen from '../components/LoadingScreen';\nimport App from './App';\nimport Navigation from '../components/NavigationBar';\nimport { Route, Switch } from 'react-router-dom';\nimport route from '../constants/routes.json';\n\nexport default class ApplicationRouter extends React.PureComponent {\n  LazyLoadingScreen = (name: string) => <LoadingScreen name={name} />;\n  LazyHomeContainer = React.lazy(() => import('./HomePage'));\n  LazyCreateContainerFormContainer = React.lazy(\n    () => import('./CreateContainer'),\n  );\n  LazyContainerListContainer = React.lazy(() => import('./ContainerListPage'));\n\n  HomePage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyHomeContainer {...props} />\n    </React.Suspense>\n  );\n\n  CreateContainerPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyCreateContainerFormContainer {...props} />\n    </React.Suspense>\n  );\n\n  ContainerListPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyContainerListContainer {...props} />\n    </React.Suspense>\n  );\n\n  public render() {\n    return (\n      <App>\n        <Navigation isLoading={false} />\n        <Switch>\n          <Route exact path={route.HOME.path} component={this.HomePage} />\n          <Route\n            path={route.CREATE_CONTAINERS.path}\n            component={this.CreateContainerPage}\n          />\n          <Route\n            path={route.CONTAINERS.path}\n            component={this.ContainerListPage}\n          />\n        </Switch>\n      </App>\n    );\n  }\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts",[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx",["118","119"],"import React, { ReactNode } from 'react';\nimport { Classes } from '@blueprintjs/core';\n\ntype AppProps = {\n  children: ReactNode;\n};\n\nexport default function App(props: AppProps) {\n  const { children } = props;\n  return <div>{children}</div>;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx",["120"],"import React from 'react';\nimport HomeContainer from '../features/home/Home';\n\nexport default function HomePage() {\n  return <HomeContainer />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx",["121","122"],"import React, { ReactElement, useEffect } from 'react';\nimport {\n  Alignment,\n  Button,\n  Classes,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  NavbarHeading,\n  Tag,\n  Colors,\n} from '@blueprintjs/core';\n\nimport routes from '../constants/routes.json';\nimport { Link } from 'react-router-dom';\nimport { getCurrentPathname } from '../store/store';\nimport { useSelector } from 'react-redux';\n// import {\n//   checkApiStatus,\n//   checkDockerStatus,\n//   getApiStatus,\n//   getDockerStatus,\n// } from '../features/home/HomeSlice';\n\ninterface INavigationItemProps {\n  route: string;\n  name: string;\n  classNames: string;\n  currentLocation: string;\n}\n\nconst NavigationItem = (props: INavigationItemProps): ReactElement => {\n  const { route, classNames, name, currentLocation } = props;\n  const isCurrent = currentLocation == route;\n  console.log(isCurrent);\n  return (\n    <>\n      <Link to={route}>\n        <Button\n          text={name}\n          minimal\n          className={classNames}\n          style={{ color: Colors.GRAY5 }}\n          active={isCurrent}\n        />\n      </Link>\n    </>\n  );\n};\n\ninterface NavigationBarProps {\n  isLoading: boolean;\n}\n\nfunction Navigation(props: NavigationBarProps): ReactElement {\n  // useEffect(() => {\n  //   checkApiStatus();\n  //   checkDockerStatus();\n  // });\n\n  const { isLoading } = props;\n  const elementIsLoading = isLoading ? Classes.SKELETON : '';\n  const currentPage = useSelector(getCurrentPathname);\n  // const dockerStatus = useSelector(getDockerStatus);\n  // const apiStatus = useSelector(getApiStatus);\n\n  const leftMenuRoutes = [\n    routes.HOME,\n    routes.CONTAINERS,\n    routes.CREATE_CONTAINERS,\n    routes.IMAGES,\n  ];\n\n  const LeftMenuItems = leftMenuRoutes.map((item, id) => (\n    <NavigationItem\n      key={id}\n      route={item.path}\n      name={item.title}\n      classNames={elementIsLoading}\n      currentLocation={currentPage}\n    />\n  ));\n\n  const rightMenuRoutes = [routes.SETTINGS];\n  const RightMenuItems = rightMenuRoutes.map((item, id) => (\n    <NavigationItem\n      key={id}\n      route={item.path}\n      name={item.title}\n      classNames={elementIsLoading}\n      currentLocation={currentPage}\n    />\n  ));\n\n  return (\n    <Navbar className={Classes.DARK}>\n      <NavbarGroup align={Alignment.LEFT}>\n        <NavbarHeading className={elementIsLoading}>Dockernetes</NavbarHeading>\n        <NavbarDivider />\n        {LeftMenuItems}\n      </NavbarGroup>\n      <NavbarGroup align={Alignment.RIGHT}>{RightMenuItems}</NavbarGroup>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx",["123"],"import React from 'react';\nimport { Spinner } from '@blueprintjs/core';\n\nexport interface LoadingScreenProps {\n  name: string;\n  size?: number;\n}\n\nexport default function LoadingScreen(props: LoadingScreenProps) {\n  const { name, size } = props;\n  const spinnerSize = size != null ? size : 100;\n\n  return (\n    <>\n      <Spinner size={spinnerSize} intent=\"success\" />\n      <h1>Loading {name}...</h1>\n    </>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx",["124","125"],"import { IconName, NonIdealState } from '@blueprintjs/core';\nimport React, { ReactElement } from 'react';\nimport AxiosClient from '../../api/Client';\nimport HomeCard from '../../components/HomeCard';\n\nimport { Status } from '../../api/Status';\n\ntype NoContainersFoundProps = {\n  icon: IconName;\n  description: ReactElement;\n  message: string;\n};\n\nfunction NoContainersFound(props: NoContainersFoundProps): ReactElement {\n  const { icon, description, message } = props;\n  return (\n    <NonIdealState icon={icon} title={message} description={description} />\n  );\n}\n\nfunction HomeContainer() {\n  const [responseData, setResponseData] = React.useState<Status | null>(null);\n  const [panelErrored, setPanelErrored] = React.useState(false);\n\n  // Fetch data from the server. If error occurs then render the error message.\n  const fetchInfo: () => void = React.useCallback(() => {\n    AxiosClient.get('status')\n      .then((response) => {\n        setResponseData(response.data);\n      })\n      .catch((_) => {\n        setPanelErrored(true);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetchInfo();\n  }, [fetchInfo]);\n\n  return panelErrored ? (\n    <NoContainersFound\n      description={\n        <p>Please check your Docker environment settings. Is Docker running?</p>\n      }\n      icon={'cross'}\n      message={'Unable to fetch Docker environment'}\n    />\n  ) : (\n    <div style={{ padding: '1rem' }}>\n      <h1>Dashboard</h1>\n      <HomeCard\n        id={responseData?.id ?? '1234'}\n        name={responseData?.environmentName ?? 'demo-environment'}\n        containerCount={responseData?.containers ?? 0}\n        imageCount={responseData?.images ?? 0}\n        dockerRootDirectory={\n          responseData?.dockerRootDirectory ?? '/var/sock/docker'\n        }\n        cpuCount={responseData?.cpuCount ?? 4}\n        memoryCount={responseData?.memoryInUse ?? 21348984}\n      />\n    </div>\n  );\n}\n\nexport default HomeContainer;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerListItem.tsx",["126","127","128"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx",["129"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx",["130"],"import React from 'react';\nimport { CreateContainerForm } from '../features/createContainer/CreateContainerForm';\n\nexport default function CreateContainer() {\n  return <CreateContainerForm />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx",["131","132","133","134","135"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx",["136"],"import React from 'react';\nimport { ContainerList } from '../features/containersList/ContainerList';\n\nexport default function ContainerListPage() {\n  return <ContainerList />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx",["137","138","139","140","141"],"import { Spinner } from '@blueprintjs/core';\nimport React from 'react';\nimport AxiosClient from '../../api/Client';\nimport { Port } from '../../api/Port';\nimport { ContainerListItem } from '../../components/ContainerListItem';\nimport { Container } from '../../api/Container';\nimport { transformObj } from '../../utils/util';\n\nexport interface IContainerListProps {\n  id?: string;\n}\n\nexport function ContainerList() {\n  const [responseData, setResponseData] = React.useState<Container[]>(\n    Array.of<Container>(),\n  );\n  const [panelLoading, setPanelLoading] = React.useState<boolean>(true);\n\n  const fetchContainers: () => void = React.useCallback(() => {\n    AxiosClient.get('containers')\n      .then((response) => {\n        setResponseData(response.data);\n        setPanelLoading(false);\n      })\n      .catch((_) => {\n        console.log('Error!');\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetchContainers();\n  }, [fetchContainers]);\n\n  return (\n    <>\n      {responseData.map((item, index) => (\n        <ContainerListItem\n          isLoading={panelLoading}\n          key={index}\n          containerId={item.id}\n          containerNames={item.containerName}\n          imageName={item.imageName}\n          ipAddress={item.ports[0]?.IP ?? ''}\n          privatePort={item.ports[0]?.PrivatePort ?? ''}\n          type={item.ports[0]?.Type ?? ''}\n          path={item.path}\n          created={new Date(item.created).toDateString()}\n          status={item.status}\n          state={item.state}\n          restartCount={item.restartCount ?? 0}\n        />\n      ))}\n    </>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx",["142"],"import { Card, Elevation, Icon, Intent, Tag } from '@blueprintjs/core';\nimport React from 'react';\n\nexport interface IHomeCardProps {\n  id: string;\n  name: string;\n  containerCount: number;\n  imageCount: number;\n  dockerRootDirectory: string;\n  cpuCount: number;\n  memoryCount: number;\n}\n\nexport default function HomeCard(props: IHomeCardProps) {\n  const {\n    id,\n    name,\n    containerCount,\n    imageCount,\n    dockerRootDirectory,\n    cpuCount,\n    memoryCount,\n  } = props;\n  return (\n    <Card id={id} elevation={Elevation.THREE}>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: 'auto',\n        }}\n      >\n        <h2>\n          {name}{' '}\n          <Tag intent={Intent.SUCCESS} round>\n            UP\n          </Tag>\n        </h2>{' '}\n      </div>\n      <div>\n        <p>\n          <Icon icon=\"layers\" /> Containers: {containerCount}\n        </p>\n        <p>\n          <Icon icon=\"database\" />\n          Volumes: {containerCount}\n        </p>\n        <p>\n          <Icon icon=\"folder-close\" /> Images: {imageCount}\n        </p>\n        <p>Docker root directory: {dockerRootDirectory}</p>\n        <p>Number of CPUs: {cpuCount}</p>\n        <p>Memory in use: {formatBytes(memoryCount, 1)}</p>\n      </div>\n    </Card>\n  );\n}\n\n/**\n * Formats the bytes into some human readable format, i.e. 1.2 GB, 3 MB,\n * @param bytes the number of bytes to process\n * @param decimals the number of decimal points to round it out to\n */\nfunction formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm: number = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Client.ts",[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/util.ts",["143","144","145","146","147","148","149","150","151"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Container.ts",["152"],{"ruleId":"153","severity":1,"message":"154","line":3,"column":25,"nodeType":"155","messageId":"156","endLine":3,"endColumn":57},{"ruleId":"153","severity":1,"message":"154","line":13,"column":27,"nodeType":"155","messageId":"156","endLine":13,"endColumn":48},{"ruleId":"153","severity":1,"message":"154","line":34,"column":32,"nodeType":"155","messageId":"156","endLine":34,"endColumn":61},{"ruleId":"153","severity":1,"message":"154","line":42,"column":35,"nodeType":"155","messageId":"156","endLine":42,"endColumn":56},{"ruleId":"153","severity":1,"message":"154","line":6,"column":16,"nodeType":"157","messageId":"156","endLine":6,"endColumn":60},{"ruleId":"153","severity":1,"message":"154","line":9,"column":23,"nodeType":"155","messageId":"156","endLine":9,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":16,"column":14,"nodeType":"155","messageId":"156","endLine":16,"endColumn":45},{"ruleId":"158","severity":1,"message":"159","line":16,"column":37,"nodeType":"160","messageId":"161","endLine":16,"endColumn":40,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":25,"nodeType":"155","messageId":"156","endLine":22,"endColumn":56},{"ruleId":"158","severity":1,"message":"159","line":22,"column":48,"nodeType":"160","messageId":"161","endLine":22,"endColumn":51,"suggestions":"163"},{"ruleId":"153","severity":1,"message":"154","line":28,"column":23,"nodeType":"155","messageId":"156","endLine":28,"endColumn":54},{"ruleId":"158","severity":1,"message":"159","line":28,"column":46,"nodeType":"160","messageId":"161","endLine":28,"endColumn":49,"suggestions":"164"},{"ruleId":"153","severity":1,"message":"154","line":34,"column":3,"nodeType":"165","messageId":"156","endLine":34,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":8,"column":16,"nodeType":"157","messageId":"156","endLine":8,"endColumn":45},{"ruleId":"153","severity":1,"message":"154","line":4,"column":16,"nodeType":"157","messageId":"156","endLine":4,"endColumn":35},{"ruleId":"166","severity":1,"message":"170","line":1,"column":31,"nodeType":"168","messageId":"169","endLine":1,"endColumn":40},{"ruleId":"166","severity":1,"message":"171","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":10,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":9,"column":16,"nodeType":"157","messageId":"156","endLine":9,"endColumn":65},{"ruleId":"153","severity":1,"message":"154","line":21,"column":1,"nodeType":"157","messageId":"156","endLine":21,"endColumn":25},{"ruleId":"166","severity":1,"message":"172","line":31,"column":15,"nodeType":"168","messageId":"169","endLine":31,"endColumn":16},{"ruleId":"166","severity":1,"message":"173","line":11,"column":10,"nodeType":"168","messageId":"169","endLine":11,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":41,"column":8,"nodeType":"157","messageId":"156","endLine":41,"endColumn":65},{"ruleId":"166","severity":1,"message":"174","line":66,"column":9,"nodeType":"168","messageId":"169","endLine":66,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":14,"column":3,"nodeType":"165","messageId":"156","endLine":14,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":4,"column":16,"nodeType":"157","messageId":"156","endLine":4,"endColumn":42},{"ruleId":"166","severity":1,"message":"175","line":2,"column":17,"nodeType":"168","messageId":"169","endLine":2,"endColumn":26},{"ruleId":"166","severity":1,"message":"176","line":2,"column":28,"nodeType":"168","messageId":"169","endLine":2,"endColumn":36},{"ruleId":"153","severity":1,"message":"154","line":9,"column":8,"nodeType":"157","messageId":"156","endLine":9,"endColumn":38},{"ruleId":"166","severity":1,"message":"177","line":53,"column":15,"nodeType":"168","messageId":"169","endLine":53,"endColumn":16},{"ruleId":"166","severity":1,"message":"178","line":63,"column":17,"nodeType":"168","messageId":"169","endLine":63,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":4,"column":16,"nodeType":"157","messageId":"156","endLine":4,"endColumn":44},{"ruleId":"166","severity":1,"message":"179","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":17},{"ruleId":"166","severity":1,"message":"180","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":14},{"ruleId":"166","severity":1,"message":"181","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":22},{"ruleId":"153","severity":1,"message":"154","line":13,"column":8,"nodeType":"157","messageId":"156","endLine":13,"endColumn":32},{"ruleId":"166","severity":1,"message":"172","line":25,"column":15,"nodeType":"168","messageId":"169","endLine":25,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":14,"column":16,"nodeType":"157","messageId":"156","endLine":14,"endColumn":56},{"ruleId":"153","severity":1,"message":"154","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":50},{"ruleId":"153","severity":1,"message":"154","line":11,"column":10,"nodeType":"155","messageId":"156","endLine":11,"endColumn":50},{"ruleId":"153","severity":1,"message":"154","line":17,"column":10,"nodeType":"155","messageId":"156","endLine":17,"endColumn":50},{"ruleId":"153","severity":1,"message":"154","line":22,"column":8,"nodeType":"157","messageId":"156","endLine":22,"endColumn":69},{"ruleId":"153","severity":1,"message":"154","line":26,"column":29,"nodeType":"155","messageId":"156","endLine":26,"endColumn":42},{"ruleId":"153","severity":1,"message":"182","line":26,"column":30,"nodeType":"168","messageId":"183","endLine":26,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":26,"column":35,"nodeType":"160","messageId":"161","endLine":26,"endColumn":38,"suggestions":"184"},{"ruleId":"158","severity":1,"message":"159","line":27,"column":40,"nodeType":"160","messageId":"161","endLine":27,"endColumn":43,"suggestions":"185"},{"ruleId":"153","severity":1,"message":"154","line":43,"column":28,"nodeType":"155","messageId":"156","endLine":43,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":15,"column":13,"nodeType":"160","messageId":"161","endLine":15,"endColumn":16,"suggestions":"186"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["187","188"],["189","190"],["191","192"],"FunctionExpression","@typescript-eslint/no-unused-vars","'Classes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Tag' is defined but never used.","'_' is defined but never used.","'ContainerStatus' is defined but never used.","'ContainerDataItem' is assigned a value but never used.","'FormEvent' is defined but never used.","'useState' is defined but never used.","'e' is defined but never used.","'evt' is defined but never used.","'Spinner' is defined but never used.","'Port' is defined but never used.","'transformObj' is defined but never used.","Argument 'obj' should be typed with a non-any type.","anyTypedArg",["193","194"],["195","196"],["197","198"],{"messageId":"199","fix":"200","desc":"201"},{"messageId":"202","fix":"203","desc":"204"},{"messageId":"199","fix":"205","desc":"201"},{"messageId":"202","fix":"206","desc":"204"},{"messageId":"199","fix":"207","desc":"201"},{"messageId":"202","fix":"208","desc":"204"},{"messageId":"199","fix":"209","desc":"201"},{"messageId":"202","fix":"210","desc":"204"},{"messageId":"199","fix":"211","desc":"201"},{"messageId":"202","fix":"212","desc":"204"},{"messageId":"199","fix":"213","desc":"201"},{"messageId":"202","fix":"214","desc":"204"},"suggestUnknown",{"range":"215","text":"216"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"215","text":"217"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"218","text":"216"},{"range":"218","text":"217"},{"range":"219","text":"216"},{"range":"219","text":"217"},{"range":"220","text":"216"},{"range":"220","text":"217"},{"range":"221","text":"216"},{"range":"221","text":"217"},{"range":"222","text":"216"},{"range":"222","text":"217"},[672,675],"unknown","never",[857,860],[1055,1058],[1064,1067],[1113,1116],[257,260]]