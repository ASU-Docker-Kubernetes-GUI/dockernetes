[{"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx":"1","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts":"2","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx":"3","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts":"4","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts":"5","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx":"6","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts":"7","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx":"8","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx":"9","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx":"10","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx":"11","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx":"12","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx":"13","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx":"14","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx":"15","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx":"16","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx":"17","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx":"18","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Client.ts":"19","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/util.ts":"20","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Container.ts":"21","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ImageSearchPage.tsx":"22","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ImageSearch.tsx":"23","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ImagesPage.tsx":"24","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/Images.tsx":"25"},{"size":881,"mtime":1611982248182,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1611822231897,"results":"28","hashOfConfig":"27"},{"size":546,"mtime":1611980605356,"results":"29","hashOfConfig":"27"},{"size":1330,"mtime":1612075577525,"results":"30","hashOfConfig":"27"},{"size":343,"mtime":1611979823354,"results":"31","hashOfConfig":"27"},{"size":2383,"mtime":1619163570696,"results":"32","hashOfConfig":"27"},{"size":387,"mtime":1617955346306,"results":"33","hashOfConfig":"27"},{"size":244,"mtime":1611822231897,"results":"34","hashOfConfig":"27"},{"size":146,"mtime":1616305539097,"results":"35","hashOfConfig":"27"},{"size":2031,"mtime":1619166928181,"results":"36","hashOfConfig":"27"},{"size":416,"mtime":1611848875100,"results":"37","hashOfConfig":"27"},{"size":1924,"mtime":1618783440234,"results":"38","hashOfConfig":"27"},{"size":3558,"mtime":1618808007338,"results":"39","hashOfConfig":"27"},{"size":195,"mtime":1616387934143,"results":"40","hashOfConfig":"27"},{"size":2753,"mtime":1618807108242,"results":"41","hashOfConfig":"27"},{"size":178,"mtime":1616388634918,"results":"42","hashOfConfig":"27"},{"size":4677,"mtime":1619163759073,"results":"43","hashOfConfig":"27"},{"size":1860,"mtime":1619164707069,"results":"44","hashOfConfig":"27"},{"size":164,"mtime":1618791581117,"results":"45","hashOfConfig":"27"},{"size":1578,"mtime":1618807488180,"results":"46","hashOfConfig":"27"},{"size":323,"mtime":1618784243184,"results":"47","hashOfConfig":"27"},{"size":159,"mtime":1619157837411,"results":"48","hashOfConfig":"27"},{"size":3129,"mtime":1619160555736,"results":"49","hashOfConfig":"27"},{"size":137,"mtime":1619163532386,"results":"50","hashOfConfig":"27"},{"size":2456,"mtime":1619166871016,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"goppdc",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"54"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/index.tsx",[],[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/reportWebVitals.ts",["122"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/DockernetesModule.tsx",["123"],"import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport { History } from 'history';\nimport { Store } from './store/store';\nimport ApplicationRouter from './containers/Router';\n\ninterface RootProps {\n  store: Store;\n  history: History;\n}\n\nconst DockernetesModule = (props: RootProps) => (\n  <Provider store={props.store}>\n    <ConnectedRouter history={props.history}>\n      <ApplicationRouter />\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default DockernetesModule;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/store.ts",["124","125"],"import { Action, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport { ThunkAction } from 'redux-thunk';\nimport createRootReducer from './rootReducer';\nimport LogRocket from 'logrocket';\n\nexport const history = createHashHistory();\nconst router = routerMiddleware(history);\nconst middleware = [\n  ...getDefaultMiddleware(),\n  router,\n  LogRocket.reduxMiddleware(),\n];\n\nconst rootReducer = createRootReducer(history);\n\nconst excludeLoggerEnvs = ['test', 'production'];\nconst shouldIncludeLogger = !excludeLoggerEnvs.includes(\n  process.env.NODE_ENV || '',\n);\n\nif (shouldIncludeLogger) {\n  const logger = createLogger({\n    level: 'info',\n    collapsed: true,\n  });\n  middleware.push(logger);\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const configuredStore = (initialState?: RootState) => {\n  return configureStore({\n    preloadedState: initialState,\n    reducer: rootReducer,\n    middleware: middleware,\n  });\n};\n\nexport const getCurrentPathname = (state: RootState) =>\n  state.router.location.pathname;\nexport type Store = ReturnType<typeof configuredStore>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/store/rootReducer.ts",["126"],"import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport homeReducer from '../features/home/HomeSlice';\n\nexport default function createRootReducer(history: History) {\n  return combineReducers({\n    router: connectRouter(history),\n    home: homeReducer,\n  });\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/Router.tsx",["127","128","129","130","131","132","133","134","135","136","137","138"],"import React from 'react';\nimport LoadingScreen from '../components/LoadingScreen';\nimport App from './App';\nimport Navigation from '../components/NavigationBar';\nimport { Route, Switch } from 'react-router-dom';\nimport route from '../constants/routes.json';\n\nexport default class ApplicationRouter extends React.PureComponent {\n  LazyLoadingScreen = (name: string) => <LoadingScreen name={name} />;\n  LazyHomeContainer = React.lazy(() => import('./HomePage'));\n  LazyCreateContainerFormContainer = React.lazy(\n    () => import('./CreateContainer'),\n  );\n  LazyContainerListContainer = React.lazy(() => import('./ContainerListPage'));\n  LazyImageSearchContainer = React.lazy(() => import('./ImageSearchPage'));\n  LazyImageContainer = React.lazy(() => import('./ImagesPage'));\n\n  HomePage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyHomeContainer {...props} />\n    </React.Suspense>\n  );\n\n  CreateContainerPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyCreateContainerFormContainer {...props} />\n    </React.Suspense>\n  );\n\n  ContainerListPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyContainerListContainer {...props} />\n    </React.Suspense>\n  );\n\n  ImageSearchListPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyImageSearchContainer {...props} />\n    </React.Suspense>\n  );\n\n  ImagesListPage = (props: Record<string, any>) => (\n    <React.Suspense fallback={this.LazyLoadingScreen}>\n      <this.LazyImageContainer {...props} />\n    </React.Suspense>\n  );\n\n  public render() {\n    return (\n      <App>\n        <Navigation isLoading={false} />\n        <Switch>\n          <Route exact path={route.HOME.path} component={this.HomePage} />\n          <Route\n            path={route.CREATE_CONTAINERS.path}\n            component={this.CreateContainerPage}\n          />\n          <Route\n            path={route.CONTAINERS.path}\n            component={this.ContainerListPage}\n          />\n          <Route\n            path={route.SEARCH_IMAGES.path}\n            component={this.ImageSearchListPage}\n          />\n          <Route path={route.IMAGES.path} component={this.ImagesListPage} />\n        </Switch>\n      </App>\n    );\n  }\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/HomeSlice.ts",[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/App.tsx",["139","140"],"import React, { ReactNode } from 'react';\nimport { Classes } from '@blueprintjs/core';\n\ntype AppProps = {\n  children: ReactNode;\n};\n\nexport default function App(props: AppProps) {\n  const { children } = props;\n  return <div>{children}</div>;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/HomePage.tsx",["141"],"import React from 'react';\nimport HomeContainer from '../features/home/Home';\n\nexport default function HomePage() {\n  return <HomeContainer />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/NavigationBar.tsx",["142","143"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/LoadingScreen.tsx",["144"],"import React from 'react';\nimport { Spinner } from '@blueprintjs/core';\n\nexport interface LoadingScreenProps {\n  name: string;\n  size?: number;\n}\n\nexport default function LoadingScreen(props: LoadingScreenProps) {\n  const { name, size } = props;\n  const spinnerSize = size != null ? size : 100;\n\n  return (\n    <>\n      <Spinner size={spinnerSize} intent=\"success\" />\n      <h1>Loading {name}...</h1>\n    </>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/home/Home.tsx",["145","146"],"import { IconName, NonIdealState } from '@blueprintjs/core';\nimport React, { ReactElement } from 'react';\nimport AxiosClient from '../../api/Client';\nimport HomeCard from '../../components/HomeCard';\n\nimport { Status } from '../../api/Status';\n\ntype NoContainersFoundProps = {\n  icon: IconName;\n  description: ReactElement;\n  message: string;\n};\n\nfunction NoContainersFound(props: NoContainersFoundProps): ReactElement {\n  const { icon, description, message } = props;\n  return (\n    <NonIdealState icon={icon} title={message} description={description} />\n  );\n}\n\nfunction HomeContainer() {\n  const [responseData, setResponseData] = React.useState<Status | null>(null);\n  const [panelErrored, setPanelErrored] = React.useState(false);\n\n  // Fetch data from the server. If error occurs then render the error message.\n  const fetchInfo: () => void = React.useCallback(() => {\n    AxiosClient.get('status')\n      .then((response) => {\n        setResponseData(response.data);\n      })\n      .catch((_) => {\n        setPanelErrored(true);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetchInfo();\n  }, [fetchInfo]);\n\n  return panelErrored ? (\n    <NoContainersFound\n      description={\n        <p>Please check your Docker environment settings. Is Docker running?</p>\n      }\n      icon={'cross'}\n      message={'Unable to fetch Docker environment'}\n    />\n  ) : (\n    <div style={{ padding: '1rem' }}>\n      <h1>Dashboard</h1>\n      <HomeCard\n        id={responseData?.id ?? '1234'}\n        name={responseData?.environmentName ?? 'demo-environment'}\n        containerCount={responseData?.containers ?? 0}\n        imageCount={responseData?.images ?? 0}\n        dockerRootDirectory={\n          responseData?.dockerRootDirectory ?? '/var/sock/docker'\n        }\n        cpuCount={responseData?.cpuCount ?? 4}\n        memoryCount={responseData?.memoryInUse ?? 21348984}\n      />\n    </div>\n  );\n}\n\nexport default HomeContainer;\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ContainerButtons.tsx",["147"],"import { Button, ButtonGroup, Intent, Toaster } from '@blueprintjs/core';\nimport React from 'react';\n\nexport const AppToaster = Toaster.create({\n  position: 'top-right',\n  maxToasts: 3,\n});\n\nexport interface IContainerButtonProps {\n  containerId: string;\n}\n\nexport class ContainerButtons extends React.PureComponent<IContainerButtonProps> {\n  public render() {\n    return (\n      <>\n        <div>\n          <h3>Container action buttons</h3>\n        </div>\n        <ButtonGroup large>\n          {this.StartButton}\n          {this.StopButton}\n          {this.KillButton}\n        </ButtonGroup>{' '}\n        <ButtonGroup large>\n          {this.RestartButton}\n          {this.ResumeButton}\n          {this.DeleteButton}\n        </ButtonGroup>\n        <Toaster />\n      </>\n    );\n  }\n\n  // TODO: Add network calls to all of these\n  private handleStartContainer() {\n    // Show the toast optimistically\n    this.showToast('Starting container...', 'success');\n    // Add logic to start creating the container here\n    // Then finally update and let the thing know that the container ist started\n\n    setTimeout(\n      () =>\n        this.showToast(`Started container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleStopContainer() {\n    this.showToast('Stopping container...', 'warning', 1000);\n\n    setTimeout(() => this.showToast('Stopped container.', 'none'), 3000);\n  }\n\n  private handleKillContainer() {\n    this.showToast('Killing container...', 'danger', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Killed container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleRestartContainer() {\n    this.showToast('Restarting container...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Restarted container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleResumeContainer() {\n    this.showToast('Resuming container...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Resumed container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private handleRemoveContainer() {\n    this.showToast('Removing container...', 'warning', 1000);\n    setTimeout(\n      () =>\n        this.showToast(`Removed container ${this.props.containerId}`, 'none'),\n      3000,\n    );\n  }\n\n  private showToast = (message: string, intent: Intent, timeout?: number) => {\n    AppToaster.show({ message: message, intent: intent, timeout: timeout });\n  };\n\n  private StartButton = (\n    <Button\n      icon={'play'}\n      intent={Intent.SUCCESS}\n      onClick={this.handleStartContainer.bind(this)}\n    >\n      Start\n    </Button>\n  );\n\n  private StopButton = (\n    <Button\n      icon={'stop'}\n      intent={Intent.DANGER}\n      onClick={this.handleStopContainer.bind(this)}\n    >\n      Stop\n    </Button>\n  );\n\n  private KillButton = (\n    <Button\n      icon={'delete'}\n      intent={Intent.DANGER}\n      onClick={this.handleKillContainer.bind(this)}\n    >\n      Kill\n    </Button>\n  );\n\n  private RestartButton = (\n    <Button\n      icon={'reset'}\n      intent={Intent.WARNING}\n      onClick={this.handleRestartContainer.bind(this)}\n    >\n      Restart\n    </Button>\n  );\n\n  private ResumeButton = (\n    <Button\n      icon={'pause'}\n      intent={Intent.WARNING}\n      onClick={this.handleResumeContainer.bind(this)}\n    >\n      Resume\n    </Button>\n  );\n\n  private DeleteButton = (\n    <Button\n      icon={'trash'}\n      intent={Intent.DANGER}\n      onClick={this.handleRemoveContainer.bind(this)}\n    >\n      Delete\n    </Button>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/CreateContainer.tsx",["148"],"import React from 'react';\nimport { CreateContainerForm } from '../features/createContainer/CreateContainerForm';\n\nexport default function CreateContainer() {\n  return <CreateContainerForm />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/createContainer/CreateContainerForm.tsx",["149","150","151","152","153"],"import { Alert, Button, FormGroup, InputGroup } from '@blueprintjs/core';\nimport React, { FormEvent, useState } from 'react';\nimport AxiosClient from '../../api/Client';\nimport { AppToaster } from '../../components/ContainerButtons';\n\n/**\n * Form for creating a new Docker container.\n */\nexport function CreateContainerForm() {\n  const [containerName, setContainerName] = React.useState<string>('');\n  const [imageName, setImageName] = React.useState<string>('');\n  const [errorPaneEnabled, setErrorPaneEnabled] = React.useState<boolean>(\n    false,\n  );\n  const [errorMessage, setErrorMessage] = React.useState<string>('');\n\n  const handleFormSubmission = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n\n    if (imageName == '') {\n      setErrorPaneEnabled(true);\n      setErrorMessage('Image name must not be blank!');\n      return;\n    }\n\n    AppToaster.show({\n      message: `Creating container...`,\n      timeout: 1500,\n      intent: 'primary',\n    });\n\n    setImageName('');\n    setContainerName('');\n\n    AxiosClient.post('containers/create', {\n      imageName: imageName,\n      containerName: containerName,\n    })\n      .then((response) => {\n        setTimeout(\n          () =>\n            AppToaster.show({\n              message: `Successfully created container: ${response.data.substring(\n                response.data.length - 8,\n                response.data.length - 1,\n              )}`,\n              timeout: 3000,\n              intent: 'success',\n            }),\n          3000,\n        );\n      })\n      .catch((e) => {\n        setErrorPaneEnabled(true);\n        setErrorMessage('Server error occurred! Try again');\n      });\n  };\n\n  const ErrorAlert = () => (\n    <Alert\n      confirmButtonText={'OK'}\n      isOpen={errorPaneEnabled}\n      onClose={(evt) => {\n        setErrorPaneEnabled(false);\n      }}\n    >\n      <p>{errorMessage}</p>\n    </Alert>\n  );\n\n  return (\n    <div>\n      <ErrorAlert />\n      <h2>Create a Container</h2>\n      <FormGroup\n        label=\"Container Name\"\n        label-for=\"parsedContainer-name-input\"\n        labelInfo=\"(leave blank if no name desired)\"\n      >\n        <InputGroup\n          id=\"parsedContainer-name-input\"\n          large\n          onChange={(e) => setContainerName(e.target.value)}\n        />\n      </FormGroup>\n      <FormGroup\n        label=\"Image Name\"\n        label-for=\"parsedContainer-name-input\"\n        labelInfo=\"(required)\"\n      >\n        <InputGroup\n          id=\"image-name-input\"\n          large\n          onChange={(e) => setImageName(e.target.value)}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Button icon={'layers'} onClick={handleFormSubmission}>\n          Create Container\n        </Button>\n      </FormGroup>\n    </div>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ContainerListPage.tsx",["154"],"import React from 'react';\nimport { ContainerList } from '../features/containersList/ContainerList';\n\nexport default function ContainerListPage() {\n  return <ContainerList />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/features/containersList/ContainerList.tsx",["155","156","157","158"],"import React from 'react';\nimport AxiosClient from '../../api/Client';\nimport { Container } from '../../api/Container';\nimport { Card, Divider, Elevation, Intent, Tag } from '@blueprintjs/core';\nimport { ContainerButtons } from '../../components/ContainerButtons';\nimport { transformID } from '../../utils/util';\n\ninterface ContainerStatusProps {\n  status: string;\n  state: number;\n}\n\nfunction ContainerStatus(props: ContainerStatusProps) {\n  const { status } = props;\n  const intentOptions = new Map([['running', Intent.SUCCESS]]);\n\n  const intent = intentOptions.get(status);\n\n  return (\n    <Tag intent={intent} round title={status} large>\n      {status}\n    </Tag>\n  );\n}\n\ninterface ContainerListItemProps {\n  containerId: string;\n  containerNames: string[];\n  imageName: string;\n  ipAddress: string;\n  privatePort: number;\n  publicPort?: number;\n  type: string;\n  path: string;\n  created: string;\n  finished?: string;\n  status: string;\n  state: number;\n  restartCount: number;\n  isLoading: boolean;\n}\n\nfunction ContainerListItem(props: ContainerListItemProps) {\n  const {\n    containerId,\n    containerNames,\n    imageName,\n    ipAddress,\n    privatePort,\n    publicPort,\n    type,\n    path,\n    created,\n    finished,\n    status,\n    state,\n    restartCount,\n    isLoading,\n  } = props;\n\n  const ContainerFinished = () =>\n    finished != null ? (\n      <p className={`bp3-running-text ${isLoading ? 'bp3-skeleton' : ''}`}>\n        Container path: {path}\n      </p>\n    ) : null;\n\n  const ContainerDataItem = (info: string, isItemLoading: boolean) =>\n    info != null ? (\n      <p className={`bp3-running-text ${isItemLoading ? 'bp3-skeleton' : ''}`}>\n        {info}\n      </p>\n    ) : null;\n\n  return (\n    <Card id={containerId} elevation={Elevation.ONE} style={{ margin: '1em' }}>\n      <div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <h4 className={'bp3-heading'}>\n            {`${containerNames[0].replace('/', '')}`}\n          </h4>\n          <br />\n          <Tag style={{ marginLeft: '0.5em' }}>{status}</Tag>\n        </div>\n        <Divider />\n        <br />\n        <p className={'bp3-running-text'}>ID: {transformID(containerId)}</p>\n        <p className={'bp3-running-text'}>Image Name: {imageName}</p>\n        <p className={'bp3-running-text'}>Created Time: {created}</p>\n        <ContainerFinished />\n        <p className={'bp3-running-text'}>IP Address: {ipAddress}</p>\n        <p className={'bp3-running-text'}>Private Port: {privatePort}</p>\n        <p className={'bp3-running-text'}>Public Port: {publicPort}</p>\n        <p className={'bp3-running-text'}>Port type: {type}</p>\n        <p className={'bp3-running-text'}>Container path: {path}</p>\n        <p className={'bp3-running-text'}>Container state: {state}</p>\n        {restartCount == null || restartCount == 0 ? null : (\n          <p className={'bp3-running-text'}>\n            Container restart count: {restartCount}\n          </p>\n        )}\n      </div>\n      <Divider />\n      <ContainerButtons containerId={containerId} />\n    </Card>\n  );\n}\n\nexport function ContainerList() {\n  const [responseData, setResponseData] = React.useState<Container[]>(\n    Array.of<Container>(),\n  );\n  const [panelLoading, setPanelLoading] = React.useState<boolean>(true);\n\n  const fetchContainers: () => void = React.useCallback(() => {\n    AxiosClient.get('containers')\n      .then((response) => {\n        setResponseData(response.data);\n        setPanelLoading(false);\n      })\n      .catch((_) => {\n        console.log('Error!');\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetchContainers();\n  }, [fetchContainers]);\n\n  return (\n    <div style={{ padding: '1em' }}>\n      <h2>All Containers</h2>\n      {responseData.map(\n        (\n          {\n            containerName,\n            created,\n            id,\n            imageName,\n            path,\n            ports,\n            restartCount,\n            state,\n            status,\n          },\n          index,\n        ) => (\n          <ContainerListItem\n            isLoading={panelLoading}\n            key={index}\n            containerId={id}\n            containerNames={containerName}\n            imageName={imageName}\n            ipAddress={ports[0]?.IP ?? ''}\n            privatePort={ports[0]?.PrivatePort ?? ''}\n            type={ports[0]?.Type ?? ''}\n            path={path}\n            created={new Date(created * 1000).toLocaleString()}\n            status={status}\n            state={state}\n            restartCount={restartCount}\n          />\n        ),\n      )}\n    </div>\n  );\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/HomeCard.tsx",["159","160"],"import { Card, Elevation, Icon, Intent, Tag } from '@blueprintjs/core';\nimport React from 'react';\n\nexport interface IHomeCardProps {\n  id: string;\n  name: string;\n  containerCount: number;\n  imageCount: number;\n  dockerRootDirectory: string;\n  cpuCount: number;\n  memoryCount: number;\n}\n\nexport default function HomeCard(props: IHomeCardProps) {\n  const {\n    id,\n    name,\n    containerCount,\n    imageCount,\n    dockerRootDirectory,\n    cpuCount,\n    memoryCount,\n  } = props;\n  return (\n    <Card id={id} elevation={Elevation.THREE}>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: 'auto',\n        }}\n      >\n        <h2>\n          {name}{' '}\n          <Tag intent={Intent.SUCCESS} round>\n            UP\n          </Tag>\n        </h2>{' '}\n      </div>\n      <div>\n        <p>\n          <Icon icon=\"layers\" /> Containers: {containerCount}\n        </p>\n        <p>\n          <Icon icon=\"database\" />\n          Volumes: {containerCount}\n        </p>\n        <p>\n          <Icon icon=\"folder-close\" /> Images: {imageCount}\n        </p>\n        <p>Docker root directory: {dockerRootDirectory}</p>\n        <p>Number of CPUs: {cpuCount}</p>\n        <p>Memory in use: {formatBytes(memoryCount, 1)}</p>\n      </div>\n    </Card>\n  );\n}\n\n/**\n * Formats the bytes into some human readable format, i.e. 1.2 GB, 3 MB,\n * @param bytes the number of bytes to process\n * @param decimals the number of decimal points to round it out to\n */\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm: number = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Client.ts",[],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/utils/util.ts",["161","162","163","164","165","166","167","168","169"],"/** Event handler that exposes the target element's value as a boolean. */\nimport React from 'react';\n\nexport function handleBooleanChange(handler: (checked: boolean) => void) {\n  return (event: React.FormEvent<HTMLElement>) =>\n    handler((event.target as HTMLInputElement).checked);\n}\n\n/** Event handler that exposes the target element's value as a string. */\nexport function handleStringChange(handler: (value: string) => void) {\n  return (event: React.FormEvent<HTMLElement>) =>\n    handler((event.target as HTMLInputElement).value);\n}\n\n/** Event handler that exposes the target element's value as an inferred generic type. */\nexport function handleValueChange<T>(handler: (value: T) => void) {\n  return (event: React.FormEvent<HTMLElement>) =>\n    handler(((event.target as HTMLInputElement).value as unknown) as T);\n}\n\n/** Event handler that exposes the target element's value as a number. */\nexport function handleNumberChange(handler: (value: number) => void) {\n  return handleStringChange((value) => handler(+value));\n}\n\nexport const transformObj = (obj: any) => {\n  return Object.keys(obj).reduce((acc: any, key) => {\n    if (key.indexOf('.') >= 0) {\n      const [parentKey, childKey] = key.split('.');\n      acc[parentKey] = acc[parentKey] || {};\n      acc[parentKey][childKey] = obj[key];\n    } else {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {});\n};\n\n/**\n * Transforms those long pesky IDs into something that's actually readable\n * @param s the ID to transform\n */\nexport const transformID = (s: string) =>\n  s.substring(s.length - 10, s.length - 1);\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/api/Container.ts",["170"],"/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ImageSearchPage.tsx",["171"],"import React from 'react';\nimport { ImageSearch } from '../components/ImageSearch';\n\nexport default function ContainerListPage() {\n  return <ImageSearch />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/ImageSearch.tsx",["172","173","174","175","176","177","178"],"import { Button, InputGroup, Tag } from '@blueprintjs/core';\nimport React, { ReactElement } from 'react';\nimport AxiosClient from '../api/Client';\nimport { ImageSearch as ImageSearchModel } from '../api/ImageSearch';\n\ntype ImageSearchItemProps = {\n  name: string;\n  isOfficial: boolean;\n  starCount: number;\n  description: string;\n};\n\nconst ImageSearchTag = ({ message }: { message: string }) => (\n  <Tag round>{message}</Tag>\n);\n\nconst ImageSearchListItem = (props: ImageSearchItemProps) => (\n  <>\n    <tr>\n      <td>\n        {props.name}{' '}\n        {props.isOfficial ? <ImageSearchTag message=\"official\" /> : null}\n      </td>\n      <td>{props.starCount}</td>\n      <td>{props.description}</td>\n    </tr>\n  </>\n);\n\nconst ImageSearchListHeaders = () => (\n  <thead>\n    <tr>\n      <th>Image name</th>\n      <th>Star count</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n);\n\nconst ImageSearchList = ({\n  searchResults,\n}: {\n  searchResults: ImageSearchModel[];\n}) => {\n  return (\n    <>\n      <ImageSearchListHeaders />\n      {searchResults.map((searchResult, index) => {\n        if (searchResult) {\n          return (\n            <ImageSearchListItem\n              name={searchResult.name}\n              isOfficial={searchResult.isOfficial}\n              starCount={searchResult.starCount}\n              description={searchResult.description}\n            />\n          );\n        }\n        return null;\n      })}\n    </>\n  );\n};\n\nexport const ImageSearch = () => {\n  const [searchInput, setSearchInput] = React.useState<string>('');\n  const [searchList, setSearchList] = React.useState<ImageSearchModel[]>(\n    Array.of<ImageSearchModel>(),\n  );\n  const [enableSearchResults, setEnableSearchResults] = React.useState<boolean>(\n    false,\n  );\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n\n  const fetchSearchResults = async (searchQuery: string) => {\n    if (searchQuery == null) return null;\n    setIsLoading(true);\n\n    return AxiosClient.get(`images/search?searchTerm=${searchQuery}`)\n      .then((response) => {\n        console.log(response.data);\n        setSearchList(response.data);\n        setIsLoading(false);\n        setEnableSearchResults(true);\n      })\n      .catch((e) => {\n        setSearchList([]);\n        setIsLoading(false);\n        setEnableSearchResults(true);\n      });\n  };\n\n  const submitSearchQuery = async () => {\n    setSearchInput(searchInput);\n    await fetchSearchResults(searchInput);\n  };\n\n  return (\n    <div style={{ paddingTop: '1em' }}>\n      <h2>Image Search</h2>\n      <p>Search for an image below</p>\n      <form className=\"form\" style={{ paddingBottom: '1em' }}>\n        <InputGroup\n          type=\"text\"\n          id=\"image-search\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          placeholder=\"search for an image\"\n        />\n        <Button\n          type=\"submit\"\n          onClick={(e: any) => {\n            submitSearchQuery().then();\n          }}\n        >\n          Search Images\n        </Button>\n      </form>\n      {enableSearchResults ? (\n        <ImageSearchList searchResults={searchList} />\n      ) : null}\n    </div>\n  );\n};\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/containers/ImagesPage.tsx",["179"],"import React from 'react';\nimport { Images } from '../components/Images';\n\nexport default function ImagesPage() {\n  return <Images />;\n}\n","/Users/ivanmartinezmorales/go/src/github.com/ivanmartinezmorales/dockernetes/frontend/src/components/Images.tsx",["180","181","182","183","184","185","186"],{"ruleId":"187","severity":1,"message":"188","line":3,"column":25,"nodeType":"189","messageId":"190","endLine":3,"endColumn":57},{"ruleId":"187","severity":1,"message":"188","line":13,"column":27,"nodeType":"189","messageId":"190","endLine":13,"endColumn":48},{"ruleId":"187","severity":1,"message":"188","line":34,"column":32,"nodeType":"189","messageId":"190","endLine":34,"endColumn":61},{"ruleId":"187","severity":1,"message":"188","line":42,"column":35,"nodeType":"189","messageId":"190","endLine":42,"endColumn":56},{"ruleId":"187","severity":1,"message":"188","line":6,"column":16,"nodeType":"191","messageId":"190","endLine":6,"endColumn":60},{"ruleId":"187","severity":1,"message":"188","line":9,"column":23,"nodeType":"189","messageId":"190","endLine":9,"endColumn":40},{"ruleId":"187","severity":1,"message":"188","line":18,"column":14,"nodeType":"189","messageId":"190","endLine":18,"endColumn":45},{"ruleId":"192","severity":1,"message":"193","line":18,"column":37,"nodeType":"194","messageId":"195","endLine":18,"endColumn":40,"suggestions":"196"},{"ruleId":"187","severity":1,"message":"188","line":24,"column":25,"nodeType":"189","messageId":"190","endLine":24,"endColumn":56},{"ruleId":"192","severity":1,"message":"193","line":24,"column":48,"nodeType":"194","messageId":"195","endLine":24,"endColumn":51,"suggestions":"197"},{"ruleId":"187","severity":1,"message":"188","line":30,"column":23,"nodeType":"189","messageId":"190","endLine":30,"endColumn":54},{"ruleId":"192","severity":1,"message":"193","line":30,"column":46,"nodeType":"194","messageId":"195","endLine":30,"endColumn":49,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"188","line":36,"column":25,"nodeType":"189","messageId":"190","endLine":36,"endColumn":56},{"ruleId":"192","severity":1,"message":"193","line":36,"column":48,"nodeType":"194","messageId":"195","endLine":36,"endColumn":51,"suggestions":"199"},{"ruleId":"187","severity":1,"message":"188","line":42,"column":20,"nodeType":"189","messageId":"190","endLine":42,"endColumn":51},{"ruleId":"192","severity":1,"message":"193","line":42,"column":43,"nodeType":"194","messageId":"195","endLine":42,"endColumn":46,"suggestions":"200"},{"ruleId":"187","severity":1,"message":"188","line":48,"column":3,"nodeType":"201","messageId":"190","endLine":48,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":8,"column":16,"nodeType":"191","messageId":"190","endLine":8,"endColumn":45},{"ruleId":"187","severity":1,"message":"188","line":4,"column":16,"nodeType":"191","messageId":"190","endLine":4,"endColumn":35},{"ruleId":"202","severity":1,"message":"206","line":1,"column":31,"nodeType":"204","messageId":"205","endLine":1,"endColumn":40},{"ruleId":"202","severity":1,"message":"207","line":10,"column":3,"nodeType":"204","messageId":"205","endLine":10,"endColumn":6},{"ruleId":"187","severity":1,"message":"188","line":9,"column":16,"nodeType":"191","messageId":"190","endLine":9,"endColumn":65},{"ruleId":"187","severity":1,"message":"188","line":21,"column":1,"nodeType":"191","messageId":"190","endLine":21,"endColumn":25},{"ruleId":"202","severity":1,"message":"208","line":31,"column":15,"nodeType":"204","messageId":"205","endLine":31,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":14,"column":3,"nodeType":"201","messageId":"190","endLine":14,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":4,"column":16,"nodeType":"191","messageId":"190","endLine":4,"endColumn":42},{"ruleId":"202","severity":1,"message":"209","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"210","line":2,"column":28,"nodeType":"204","messageId":"205","endLine":2,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":9,"column":8,"nodeType":"191","messageId":"190","endLine":9,"endColumn":38},{"ruleId":"202","severity":1,"message":"211","line":53,"column":15,"nodeType":"204","messageId":"205","endLine":53,"endColumn":16},{"ruleId":"202","severity":1,"message":"212","line":63,"column":17,"nodeType":"204","messageId":"205","endLine":63,"endColumn":20},{"ruleId":"187","severity":1,"message":"188","line":4,"column":16,"nodeType":"191","messageId":"190","endLine":4,"endColumn":44},{"ruleId":"202","severity":1,"message":"213","line":13,"column":10,"nodeType":"204","messageId":"205","endLine":13,"endColumn":25},{"ruleId":"202","severity":1,"message":"214","line":68,"column":9,"nodeType":"204","messageId":"205","endLine":68,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":116,"column":8,"nodeType":"191","messageId":"190","endLine":116,"endColumn":32},{"ruleId":"202","severity":1,"message":"208","line":128,"column":15,"nodeType":"204","messageId":"205","endLine":128,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":14,"column":16,"nodeType":"191","messageId":"190","endLine":14,"endColumn":56},{"ruleId":"187","severity":1,"message":"188","line":64,"column":8,"nodeType":"191","messageId":"190","endLine":64,"endColumn":57},{"ruleId":"187","severity":1,"message":"188","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":17,"column":10,"nodeType":"189","messageId":"190","endLine":17,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":22,"column":8,"nodeType":"191","messageId":"190","endLine":22,"endColumn":69},{"ruleId":"187","severity":1,"message":"188","line":26,"column":29,"nodeType":"189","messageId":"190","endLine":26,"endColumn":42},{"ruleId":"187","severity":1,"message":"215","line":26,"column":30,"nodeType":"204","messageId":"216","endLine":26,"endColumn":38},{"ruleId":"192","severity":1,"message":"193","line":26,"column":35,"nodeType":"194","messageId":"195","endLine":26,"endColumn":38,"suggestions":"217"},{"ruleId":"192","severity":1,"message":"193","line":27,"column":40,"nodeType":"194","messageId":"195","endLine":27,"endColumn":43,"suggestions":"218"},{"ruleId":"187","severity":1,"message":"188","line":43,"column":28,"nodeType":"189","messageId":"190","endLine":43,"endColumn":42},{"ruleId":"192","severity":1,"message":"193","line":15,"column":13,"nodeType":"194","messageId":"195","endLine":15,"endColumn":16,"suggestions":"219"},{"ruleId":"187","severity":1,"message":"188","line":4,"column":16,"nodeType":"191","messageId":"190","endLine":4,"endColumn":44},{"ruleId":"202","severity":1,"message":"220","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":29},{"ruleId":"202","severity":1,"message":"221","line":48,"column":41,"nodeType":"204","messageId":"205","endLine":48,"endColumn":46},{"ruleId":"187","severity":1,"message":"188","line":65,"column":28,"nodeType":"189","messageId":"190","endLine":65,"endColumn":33},{"ruleId":"202","severity":1,"message":"222","line":73,"column":10,"nodeType":"204","messageId":"205","endLine":73,"endColumn":19},{"ruleId":"202","severity":1,"message":"211","line":86,"column":15,"nodeType":"204","messageId":"205","endLine":86,"endColumn":16},{"ruleId":"202","severity":1,"message":"211","line":111,"column":21,"nodeType":"204","messageId":"205","endLine":111,"endColumn":27},{"ruleId":"192","severity":1,"message":"193","line":111,"column":24,"nodeType":"194","messageId":"195","endLine":111,"endColumn":27,"suggestions":"223"},{"ruleId":"187","severity":1,"message":"188","line":4,"column":16,"nodeType":"191","messageId":"190","endLine":4,"endColumn":37},{"ruleId":"187","severity":1,"message":"188","line":72,"column":23,"nodeType":"189","messageId":"190","endLine":72,"endColumn":28},{"ruleId":"202","severity":1,"message":"222","line":74,"column":10,"nodeType":"204","messageId":"205","endLine":74,"endColumn":19},{"ruleId":"202","severity":1,"message":"224","line":75,"column":10,"nodeType":"204","messageId":"205","endLine":75,"endColumn":24},{"ruleId":"202","severity":1,"message":"225","line":75,"column":26,"nodeType":"204","messageId":"205","endLine":75,"endColumn":41},{"ruleId":"202","severity":1,"message":"226","line":76,"column":10,"nodeType":"204","messageId":"205","endLine":76,"endColumn":22},{"ruleId":"202","severity":1,"message":"227","line":76,"column":24,"nodeType":"204","messageId":"205","endLine":76,"endColumn":39},{"ruleId":"202","severity":1,"message":"208","line":85,"column":15,"nodeType":"204","messageId":"205","endLine":85,"endColumn":16},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["228","229"],["230","231"],["232","233"],["234","235"],["236","237"],"FunctionExpression","@typescript-eslint/no-unused-vars","'Classes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Tag' is defined but never used.","'_' is defined but never used.","'FormEvent' is defined but never used.","'useState' is defined but never used.","'e' is defined but never used.","'evt' is defined but never used.","'ContainerStatus' is defined but never used.","'ContainerDataItem' is assigned a value but never used.","Argument 'obj' should be typed with a non-any type.","anyTypedArg",["238","239"],["240","241"],["242","243"],"'ReactElement' is defined but never used.","'index' is defined but never used.","'isLoading' is assigned a value but never used.",["244","245"],"'isPanelErrored' is assigned a value but never used.","'setPanelErrored' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.",{"messageId":"246","fix":"247","desc":"248"},{"messageId":"249","fix":"250","desc":"251"},{"messageId":"246","fix":"252","desc":"248"},{"messageId":"249","fix":"253","desc":"251"},{"messageId":"246","fix":"254","desc":"248"},{"messageId":"249","fix":"255","desc":"251"},{"messageId":"246","fix":"256","desc":"248"},{"messageId":"249","fix":"257","desc":"251"},{"messageId":"246","fix":"258","desc":"248"},{"messageId":"249","fix":"259","desc":"251"},{"messageId":"246","fix":"260","desc":"248"},{"messageId":"249","fix":"261","desc":"251"},{"messageId":"246","fix":"262","desc":"248"},{"messageId":"249","fix":"263","desc":"251"},{"messageId":"246","fix":"264","desc":"248"},{"messageId":"249","fix":"265","desc":"251"},{"messageId":"246","fix":"266","desc":"248"},{"messageId":"249","fix":"267","desc":"251"},"suggestUnknown",{"range":"268","text":"269"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"268","text":"270"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"271","text":"269"},{"range":"271","text":"270"},{"range":"272","text":"269"},{"range":"272","text":"270"},{"range":"273","text":"269"},{"range":"273","text":"270"},{"range":"274","text":"269"},{"range":"274","text":"270"},{"range":"275","text":"269"},{"range":"275","text":"270"},{"range":"276","text":"269"},{"range":"276","text":"270"},{"range":"277","text":"269"},{"range":"277","text":"270"},{"range":"278","text":"269"},{"range":"278","text":"270"},[813,816],"unknown","never",[998,1001],[1196,1199],[1390,1393],[1577,1580],[1064,1067],[1113,1116],[257,260],[2879,2882]]